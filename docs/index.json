{
  "api/Global.AbstractBattle.html": {
    "href": "api/Global.AbstractBattle.html",
    "title": "Class AbstractBattle | Tower Defense",
    "keywords": "Class AbstractBattle Base class for combat related functionality. Enemies and towers should implement this class. This class works closely with the Detection component. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour AbstractBattle MineTowerBattle RangedTowerBattle Namespace : Global Assembly : TowerDefense.dll Syntax public abstract class AbstractBattle : MonoBehaviour Fields Attack Attack power of this unit. This is the amount that is subtracted from the enemy's health. Declaration public float Attack Field Value Type Description Single Defense Defense stat for this unit. When attacked this unit will absorb this fraction of the applied damage. Must be between 0 and 1. Declaration public float Defense Field Value Type Description Single FireRate Rate of attack for this unit. Value must be in attacks per second. Declaration public float FireRate Field Value Type Description Single Range Detection range for this unit. It will only attack when enemies are closer than this value. Declaration public float Range Field Value Type Description Single Methods OnDetect(GameObject[]) Called by the Detection component to start attack processes on targets in line-of-sight. Declaration public abstract void OnDetect(GameObject[] targets) Parameters Type Name Description UnityEngine.GameObject [] targets GameObjects to target OnLose() A \"reset\" for the attack processes used when the target is destroyed or lost. Declaration public abstract void OnLose()"
  },
  "api/Global.AIBerzerker.html": {
    "href": "api/Global.AIBerzerker.html",
    "title": "Class AIBerzerker | Tower Defense",
    "keywords": "Class AIBerzerker Implementation for the berzerker's AI. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour AIBerzerker Namespace : Global Assembly : TowerDefense.dll Syntax public class AIBerzerker : MonoBehaviour"
  },
  "api/Global.AIController.html": {
    "href": "api/Global.AIController.html",
    "title": "Class AIController | Tower Defense",
    "keywords": "Class AIController AIController class to control AI movement. TODO: Deprecate this class? Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour AIController Namespace : Global Assembly : TowerDefense.dll Syntax public class AIController : MonoBehaviour Methods MoveTo(Vector3) Moves the AI object to the given point. Declaration public void MoveTo(Vector3 dest) Parameters Type Name Description UnityEngine.Vector3 dest Vector3 for the destination point"
  },
  "api/Global.AIRunner.html": {
    "href": "api/Global.AIRunner.html",
    "title": "Class AIRunner | Tower Defense",
    "keywords": "Class AIRunner Implementation for the runner's AI. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour AIRunner Namespace : Global Assembly : TowerDefense.dll Syntax public class AIRunner : MonoBehaviour"
  },
  "api/Global.Damageable.html": {
    "href": "api/Global.Damageable.html",
    "title": "Class Damageable | Tower Defense",
    "keywords": "Class Damageable Component that implements health. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour Damageable Namespace : Global Assembly : TowerDefense.dll Syntax public class Damageable : MonoBehaviour Properties IsDead State of the object. Declaration public bool IsDead { get; } Property Value Type Description Boolean True if dead. Methods ApplyDamage(Single) Subtracts the given value from health and triggers death if health reaches 0 Declaration public void ApplyDamage(float damage) Parameters Type Name Description Single damage Value to be subtracted GetHealth() Getter for the health of the object. Declaration public float GetHealth() Returns Type Description Single A float between 0 and 100."
  },
  "api/Global.Detection.html": {
    "href": "api/Global.Detection.html",
    "title": "Class Detection | Tower Defense",
    "keywords": "Class Detection Component to detect enemies using Physics.OverlapSphere Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour Detection Namespace : Global Assembly : TowerDefense.dll Syntax public class Detection : MonoBehaviour Properties IsOccupied State of the object. Declaration public bool IsOccupied { get; set; } Property Value Type Description Boolean True if the object is attacking, False if it is idle and should detect."
  },
  "api/Global.DialogButton.html": {
    "href": "api/Global.DialogButton.html",
    "title": "Class DialogButton | Tower Defense",
    "keywords": "Class DialogButton Inheritance Object DialogButton Namespace : Global Assembly : TowerDefense.dll Syntax public class DialogButton Constructors DialogButton(Boolean, String, UnityAction) Constructor for this settings class to allow optional parameters. Declaration public DialogButton(bool interactable = true, string text = \"Button\", UnityAction onClick = null) Parameters Type Name Description Boolean interactable (Optional) Is the button interactable. Default is true. String text (Optional) The text to be shown on the button. Default is \"Button\". UnityEngine.Events.UnityAction onClick (Optional) Function to be called on click. Default is an empty function. Properties Interactable Indicates that the button is interactable. Declaration public bool Interactable { get; } Property Value Type Description Boolean True if is interactable. OnClick Callback for the button. Declaration public UnityAction OnClick { get; } Property Value Type Description UnityEngine.Events.UnityAction A void function with zero arguments. Text Text to be shown on the button. Declaration public string Text { get; } Property Value Type Description String String"
  },
  "api/Global.DialogConfig.html": {
    "href": "api/Global.DialogConfig.html",
    "title": "Struct DialogConfig | Tower Defense",
    "keywords": "Struct DialogConfig Configuration settings for a dialog. Namespace : Global Assembly : TowerDefense.dll Syntax public struct DialogConfig Fields Cancel Settings for the Cancel button. Declaration public DialogButton Cancel Field Value Type Description DialogButton Message Message to be displayed in the text field of the dialog box. Declaration public string Message Field Value Type Description String OK Settings for the OK button. Declaration public DialogButton OK Field Value Type Description DialogButton"
  },
  "api/Global.DialogSystem.html": {
    "href": "api/Global.DialogSystem.html",
    "title": "Class DialogSystem | Tower Defense",
    "keywords": "Class DialogSystem Handles the apprearance and disappearance of the associated dialog box. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour DialogSystem Namespace : Global Assembly : TowerDefense.dll Syntax public class DialogSystem : MonoBehaviour Methods CancelClicked() Called when the Cancel button is clicked on the UI. Declaration public void CancelClicked() Hide() Hide the dialog Declaration public void Hide() OKClicked() Called when the OK button is clicked on the UI. Declaration public void OKClicked() Show(DialogConfig) Show the dialog Declaration public void Show(DialogConfig config) Parameters Type Name Description DialogConfig config Settings with which the dialog should be created."
  },
  "api/Global.ETowerType.html": {
    "href": "api/Global.ETowerType.html",
    "title": "Enum ETowerType | Tower Defense",
    "keywords": "Enum ETowerType Enum for tower types. This is important to refer to towers in a safe way. Namespace : Global Assembly : TowerDefense.dll Syntax public enum ETowerType : ushort Fields Name Description Base Gold Green None Red"
  },
  "api/Global.EventRegistry.html": {
    "href": "api/Global.EventRegistry.html",
    "title": "Class EventRegistry | Tower Defense",
    "keywords": "Class EventRegistry A class to orchestrate all events Inheritance Object EventRegistry Namespace : Global Assembly : TowerDefense.dll Syntax public static class EventRegistry Methods GetEvent(String) Gets you the event associated with the key. Creates one if no event found. Declaration public static TDEvent GetEvent(string name) Parameters Type Name Description String name Key for event lookup Returns Type Description TDEvent TDEvent corresponding to the string GetEvent<TParam>(String) Declaration public static TDEvent<TParam> GetEvent<TParam>(string name) Parameters Type Name Description String name Returns Type Description TDEvent <TParam> Type Parameters Name Description TParam GetEvent<TParam1, TParam2>(String) Declaration public static TDEvent<TParam1, TParam2> GetEvent<TParam1, TParam2>(string name) Parameters Type Name Description String name Returns Type Description TDEvent <TParam1, TParam2> Type Parameters Name Description TParam1 TParam2 GetEvent<TParam1, TParam2, TParam3>(String) Declaration public static TDEvent<TParam1, TParam2, TParam3> GetEvent<TParam1, TParam2, TParam3>(string name) Parameters Type Name Description String name Returns Type Description TDEvent <TParam1, TParam2, TParam3> Type Parameters Name Description TParam1 TParam2 TParam3 Invoke(String) Declaration public static void Invoke(string name) Parameters Type Name Description String name Invoke<TParam1, TParam2>(String, TParam1, TParam2) Declaration public static void Invoke<TParam1, TParam2>(string name, TParam1 param1, TParam2 param2) Parameters Type Name Description String name TParam1 param1 TParam2 param2 Type Parameters Name Description TParam1 TParam2 Invoke<TParam1, TParam2, TParam3>(String, TParam1, TParam2, TParam3) Declaration public static void Invoke<TParam1, TParam2, TParam3>(string name, TParam1 param1, TParam2 param2, TParam3 param3) Parameters Type Name Description String name TParam1 param1 TParam2 param2 TParam3 param3 Type Parameters Name Description TParam1 TParam2 TParam3 RegisterAction(String, UnityAction) Registers a zero argument callback for an event. Creates the event if it doesn't exist. Declaration public static bool RegisterAction(string name, UnityAction callback) Parameters Type Name Description String name Name of the event UnityEngine.Events.UnityAction callback Callback to register Returns Type Description Boolean True if successfully registered RegisterAction<TParam>(String, UnityAction<TParam>) Declaration public static bool RegisterAction<TParam>(string name, UnityAction<TParam> callback) Parameters Type Name Description String name UnityEngine.Events.UnityAction <TParam> callback Returns Type Description Boolean Type Parameters Name Description TParam RegisterAction<TParam1, TParam2>(String, UnityAction<TParam1, TParam2>) Declaration public static bool RegisterAction<TParam1, TParam2>(string name, UnityAction<TParam1, TParam2> callback) Parameters Type Name Description String name UnityEngine.Events.UnityAction <TParam1, TParam2> callback Returns Type Description Boolean Type Parameters Name Description TParam1 TParam2 RegisterAction<TParam1, TParam2, TParam3>(String, UnityAction<TParam1, TParam2, TParam3>) Declaration public static bool RegisterAction<TParam1, TParam2, TParam3>(string name, UnityAction<TParam1, TParam2, TParam3> callback) Parameters Type Name Description String name UnityAction <TParam1, TParam2, TParam3> callback Returns Type Description Boolean Type Parameters Name Description TParam1 TParam2 TParam3"
  },
  "api/Global.FaceCamera.html": {
    "href": "api/Global.FaceCamera.html",
    "title": "Class FaceCamera | Tower Defense",
    "keywords": "Class FaceCamera Component to make the game object always face the camera. Used for UI elements. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour FaceCamera Namespace : Global Assembly : TowerDefense.dll Syntax public class FaceCamera : MonoBehaviour"
  },
  "api/Global.FramerateMonitor.html": {
    "href": "api/Global.FramerateMonitor.html",
    "title": "Class FramerateMonitor | Tower Defense",
    "keywords": "Class FramerateMonitor Represents a behavior that monitors the application for framerate issues and automatically submits a user report. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour UserReportingMonitor FramerateMonitor Inherited Members UserReportingMonitor.IsEnabled UserReportingMonitor.IsEnabledAfterTrigger UserReportingMonitor.IsHiddenWithoutDimension UserReportingMonitor.MonitorName UserReportingMonitor.Summary UserReportingMonitor.Trigger() UserReportingMonitor.Triggered() Namespace : Global Assembly : UserReporting.dll Syntax public class FramerateMonitor : UserReportingMonitor Constructors | Improve this Doc View Source FramerateMonitor() Creates a new instance of the FramerateMonitor class. Declaration public FramerateMonitor() Fields | Improve this Doc View Source MaximumDurationInSeconds Gets or sets the maximum duration in seconds. Declaration public float MaximumDurationInSeconds Field Value Type Description Single | Improve this Doc View Source MinimumFramerate Gets or sets the minimum framerate. Declaration public float MinimumFramerate Field Value Type Description Single"
  },
  "api/Global.GameState.html": {
    "href": "api/Global.GameState.html",
    "title": "Class GameState | Tower Defense",
    "keywords": "Class GameState Data class for game state variables. Inheritance Object GameState Namespace : Global Assembly : TowerDefense.dll Syntax public static class GameState Properties CurrentCash Current cash that the player has. Declaration public static int CurrentCash { get; set; } Property Value Type Description Int32 An integer value, starts at 2000. WaveNumber Wave number that the player is at. Declaration public static int WaveNumber { get; set; } Property Value Type Description Int32 An integer value, starts at 0."
  },
  "api/Global.GenericMap-1.html": {
    "href": "api/Global.GenericMap-1.html",
    "title": "Class GenericMap<TKey> | Tower Defense",
    "keywords": "Class GenericMap<TKey> A wrapper around dictionary to support generic values. Inheritance Object GenericMap<TKey> Namespace : Global Assembly : TowerDefense.dll Syntax public class GenericMap<TKey> Type Parameters Name Description TKey Type parameter for the keys in the map Methods Add<TValue>(TKey, TValue) Add a key-value pair to the map Declaration public void Add<TValue>(TKey key, TValue value) Parameters Type Name Description TKey key Key for this entry TValue value Value for this entry Type Parameters Name Description TValue Type parameter for value ContainsKey(TKey) Check if the map contains a value for the given key. Declaration public bool ContainsKey(TKey key) Parameters Type Name Description TKey key Key to be queried Returns Type Description Boolean True if the key exists GetValue<TValue>(TKey) An unsafe way to get the value.false Might return null. Declaration [Obsolete(\"Use TryGetValue instead.\")] public TValue GetValue<TValue>(TKey key) where TValue : class Parameters Type Name Description TKey key Returns Type Description TValue Type Parameters Name Description TValue Type parameter for the value. TryGetValue<TValue>(TKey, out TValue) Try to find the value corresponding to the given key. Declaration public bool TryGetValue<TValue>(TKey key, out TValue value) where TValue : class Parameters Type Name Description TKey key TValue value Returns Type Description Boolean True if a valid value was found Type Parameters Name Description TValue Type parameter for value. Fetched value will be cast to this type."
  },
  "api/Global.HealthBarUI.html": {
    "href": "api/Global.HealthBarUI.html",
    "title": "Class HealthBarUI | Tower Defense",
    "keywords": "Class HealthBarUI Implements the HealthBar UI element. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour HealthBarUI Namespace : Global Assembly : TowerDefense.dll Syntax public class HealthBarUI : MonoBehaviour Methods SetHealth(Single) Sets the progress bar to reflect the provided value. Declaration public void SetHealth(float health) Parameters Type Name Description Single health Value from 0 to 100 that should be shown on the progress bar."
  },
  "api/Global.html": {
    "href": "api/Global.html",
    "title": "Namespace Global | Tower Defense",
    "keywords": "Namespace Global Classes AbstractBattle Base class for combat related functionality. Enemies and towers should implement this class. This class works closely with the Detection component. AIBerzerker Implementation for the berzerker's AI. AIController AIController class to control AI movement. TODO: Deprecate this class? AIRunner Implementation for the runner's AI. Damageable Component that implements health. Detection Component to detect enemies using Physics.OverlapSphere DialogButton DialogSystem Handles the apprearance and disappearance of the associated dialog box. EventRegistry A class to orchestrate all events FaceCamera Component to make the game object always face the camera. Used for UI elements. FramerateMonitor Represents a behavior that monitors the application for framerate issues and automatically submits a user report. GameState Data class for game state variables. GenericMap<TKey> A wrapper around dictionary to support generic values. HealthBarUI Implements the HealthBar UI element. InputSystem Manager class for handling mouse input. LoadingScene Handles loading scene behavior. MainMenu Handles Main Menu behavior MineTowerBattle BattleComponent for the Mine Tower. PauseMenu Handles Pause Menu behavior. RangedTowerBattle BattleComponent for Ranged Towers. SerializableDictionary SerializableDictionary.Storage<T> SerializableDictionary<TKey, TValue> SerializableDictionary<TKey, TValue, TValueStorage> SerializableDictionaryBase<TKey, TValue, TValueStorage> SerializableDictionaryPropertyDrawer SerializableDictionaryStoragePropertyDrawer Spawner Enemy spawner. Implementation of the wave system. TDEvent An event that takes callbacks with no parameters TDEvent<TParam> An event that takes callbacks with one parameter TDEvent<TParam1, TParam2> An event that takes callbacks with two parameters TDEvent<TParam1, TParam2, TParam3> An event that takes callbacks with three parameters TestCallback A class to test the event system.false Place callbacks here. TestEventCall A class to test the event system. Fire events here. TowerMenuUISystem Brings up the tower menu when a tower is selected. TowerPlacementSystem System to place towers. Sets up the TowerPlacer. TowerPlacer Implements the tower placement location selector. TowerType A component that can be attached to buttons to check what tower they are associated with in a safe way with an enum TowerTypeBoolDictionary TowerTypeBoolDictionaryPropertyDrawer UIManager Manager class that holds references to all UI layers and handles the UI stack. UpgradeMenuUISystem Manager class for tower upgrades. Handles UI and tower object instantiation/deletion. UpgradeTree This component stores information about possible upgrades in the upgrade tree. UserReportingConfigureOnly Represents a behavior that configures user reporting, but does not provide any additional functionality. UserReportingMonitor Represents a behavior that monitors the application for issues and automatically submits a user report. UserReportingScript Represents a behavior for working with the user reporting client. UserReportingXRExtensions Represents a behavior that collects XR information for user reports. WalletUISystem Controls the wallet UI on screen. WaveTimerUI Controls the wave timer on screen. Structs DialogConfig Configuration settings for a dialog. Interfaces IUISystem Exposes basic UI functionality. All MenuUISystems should implement this interface. Enums ETowerType Enum for tower types. This is important to refer to towers in a safe way. UserReportingPlatformType UserReportingState Represents a user reporting state."
  },
  "api/Global.InputSystem.html": {
    "href": "api/Global.InputSystem.html",
    "title": "Class InputSystem | Tower Defense",
    "keywords": "Class InputSystem Manager class for handling mouse input. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour InputSystem Namespace : Global Assembly : TowerDefense.dll Syntax public class InputSystem : MonoBehaviour Fields BaseTower Prefab that the tower placer will place by default Declaration public GameObject BaseTower Field Value Type Description UnityEngine.GameObject"
  },
  "api/Global.IUISystem.html": {
    "href": "api/Global.IUISystem.html",
    "title": "Interface IUISystem | Tower Defense",
    "keywords": "Interface IUISystem Exposes basic UI functionality. All MenuUISystems should implement this interface. Namespace : Global Assembly : TowerDefense.dll Syntax public interface IUISystem Methods Hide() Hides the UI screen. Declaration void Hide() Show(GameObject) Show the UI screen with values from the provided object. Declaration void Show(GameObject obj) Parameters Type Name Description UnityEngine.GameObject obj GameObject used to populate the layer"
  },
  "api/Global.LoadingScene.html": {
    "href": "api/Global.LoadingScene.html",
    "title": "Class LoadingScene | Tower Defense",
    "keywords": "Class LoadingScene Handles loading scene behavior. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour LoadingScene Namespace : Global Assembly : TowerDefense.dll Syntax public class LoadingScene : MonoBehaviour"
  },
  "api/Global.MainMenu.html": {
    "href": "api/Global.MainMenu.html",
    "title": "Class MainMenu | Tower Defense",
    "keywords": "Class MainMenu Handles Main Menu behavior Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour MainMenu Namespace : Global Assembly : TowerDefense.dll Syntax public class MainMenu : MonoBehaviour Methods OnHelp() Callback for the help button. Activates the help panel. Declaration public void OnHelp() OnPlay() Callback for the play button. Loads the next scene. Declaration public void OnPlay() OnQuit() Callback for the quit button. Brings up the dialog to ask for confirmation. Declaration public void OnQuit() OnSettings() Callback for the settings screen. Activates the settings panel. Declaration public void OnSettings()"
  },
  "api/Global.MineTowerBattle.html": {
    "href": "api/Global.MineTowerBattle.html",
    "title": "Class MineTowerBattle | Tower Defense",
    "keywords": "Class MineTowerBattle BattleComponent for the Mine Tower. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour AbstractBattle MineTowerBattle Inherited Members AbstractBattle.Attack AbstractBattle.Defense AbstractBattle.Range AbstractBattle.FireRate Namespace : Global Assembly : TowerDefense.dll Syntax public class MineTowerBattle : AbstractBattle Methods OnDetect(GameObject[]) Declaration public override void OnDetect(GameObject[] tgt) Parameters Type Name Description UnityEngine.GameObject [] tgt Overrides AbstractBattle.OnDetect(GameObject[]) OnLose() Declaration public override void OnLose() Overrides AbstractBattle.OnLose()"
  },
  "api/Global.PauseMenu.html": {
    "href": "api/Global.PauseMenu.html",
    "title": "Class PauseMenu | Tower Defense",
    "keywords": "Class PauseMenu Handles Pause Menu behavior. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour PauseMenu Implements IUISystem Namespace : Global Assembly : TowerDefense.dll Syntax public class PauseMenu : MonoBehaviour, IUISystem Methods Hide() Deactivates the PauseMenu object. Declaration public void Hide() OnBrightnessSlider() Callback for the brightness slider. Declaration public void OnBrightnessSlider() OnQuit() Callback for the quit button. Brings up the dialog for confirmation and loads the main scene if confirmed. Declaration public void OnQuit() OnResume() Callback for the resume button. Unpause the game with timeScale and deactivate menu object. Declaration public void OnResume() OnSettings() Callback for the settings button. Switch the active panel. Declaration public void OnSettings() OnSettingsAccept() Callback for the accept button in the settings panel. Switches active panels. TODO: Split settings into a different script, maybe have the implementation in a settings object that will save all settings? Declaration public void OnSettingsAccept() Show() Pauses the game with timeScale and activates the PauseMenu object. Declaration public void Show() Show(GameObject) To implement the IUISystem. TODO: Change the interface to better handle void functions. Declaration public void Show(GameObject obj) Parameters Type Name Description UnityEngine.GameObject obj Implements IUISystem"
  },
  "api/Global.RangedTowerBattle.html": {
    "href": "api/Global.RangedTowerBattle.html",
    "title": "Class RangedTowerBattle | Tower Defense",
    "keywords": "Class RangedTowerBattle BattleComponent for Ranged Towers. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour AbstractBattle RangedTowerBattle Inherited Members AbstractBattle.Attack AbstractBattle.Defense AbstractBattle.Range AbstractBattle.FireRate Namespace : Global Assembly : TowerDefense.dll Syntax public class RangedTowerBattle : AbstractBattle Methods OnDetect(GameObject[]) Declaration public override void OnDetect(GameObject[] targets) Parameters Type Name Description UnityEngine.GameObject [] targets Overrides AbstractBattle.OnDetect(GameObject[]) OnLose() Declaration public override void OnLose() Overrides AbstractBattle.OnLose()"
  },
  "api/Global.SerializableDictionary.html": {
    "href": "api/Global.SerializableDictionary.html",
    "title": "Class SerializableDictionary | Tower Defense",
    "keywords": "Class SerializableDictionary Inheritance Object SerializableDictionary Namespace : Global Assembly : TowerDefense.dll Syntax public static class SerializableDictionary"
  },
  "api/Global.SerializableDictionary.Storage-1.html": {
    "href": "api/Global.SerializableDictionary.Storage-1.html",
    "title": "Class SerializableDictionary.Storage<T> | Tower Defense",
    "keywords": "Class SerializableDictionary.Storage<T> Inheritance Object SerializableDictionary.Storage<T> Namespace : Global Assembly : TowerDefense.dll Syntax public class Storage<T> Type Parameters Name Description T Fields data Declaration public T data Field Value Type Description T"
  },
  "api/Global.SerializableDictionary-2.html": {
    "href": "api/Global.SerializableDictionary-2.html",
    "title": "Class SerializableDictionary<TKey, TValue> | Tower Defense",
    "keywords": "Class SerializableDictionary<TKey, TValue> Inheritance Object Dictionary <TKey, TValue> SerializableDictionaryBase <TKey, TValue, TValue> SerializableDictionary<TKey, TValue> TowerTypeBoolDictionary Inherited Members SerializableDictionaryBase<TKey, TValue, TValue>.SetValue(TValue[], Int32, TValue) SerializableDictionaryBase<TKey, TValue, TValue>.GetValue(TValue[], Int32) SerializableDictionaryBase<TKey, TValue, TValue>.CopyFrom(IDictionary<TKey, TValue>) SerializableDictionaryBase<TKey, TValue, TValue>.OnAfterDeserialize() SerializableDictionaryBase<TKey, TValue, TValue>.OnBeforeSerialize() Namespace : Global Assembly : TowerDefense.dll Syntax public class SerializableDictionary<TKey, TValue> : SerializableDictionaryBase<TKey, TValue, TValue>, IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IReadOnlyDictionary<TKey, TValue>, IReadOnlyCollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable, ISerializationCallbackReceiver Type Parameters Name Description TKey TValue Constructors SerializableDictionary() Declaration public SerializableDictionary() SerializableDictionary(IDictionary<TKey, TValue>) Declaration public SerializableDictionary(IDictionary<TKey, TValue> dict) Parameters Type Name Description IDictionary <TKey, TValue> dict SerializableDictionary(SerializationInfo, StreamingContext) Declaration protected SerializableDictionary(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Methods GetValue(TValue[], Int32) Declaration protected override TValue GetValue(TValue[] storage, int i) Parameters Type Name Description TValue[] storage Int32 i Returns Type Description TValue Overrides SerializableDictionaryBase<TKey, TValue, TValue>.GetValue(TValue[], System.Int32) SetValue(TValue[], Int32, TValue) Declaration protected override void SetValue(TValue[] storage, int i, TValue value) Parameters Type Name Description TValue[] storage Int32 i TValue value Overrides SerializableDictionaryBase<TKey, TValue, TValue>.SetValue(TValue[], System.Int32, TValue)"
  },
  "api/Global.SerializableDictionary-3.html": {
    "href": "api/Global.SerializableDictionary-3.html",
    "title": "Class SerializableDictionary<TKey, TValue, TValueStorage> | Tower Defense",
    "keywords": "Class SerializableDictionary<TKey, TValue, TValueStorage> Inheritance Object Dictionary <TKey, TValue> SerializableDictionaryBase <TKey, TValue, TValueStorage> SerializableDictionary<TKey, TValue, TValueStorage> Inherited Members SerializableDictionaryBase<TKey, TValue, TValueStorage>.SetValue(TValueStorage[], Int32, TValue) SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetValue(TValueStorage[], Int32) SerializableDictionaryBase<TKey, TValue, TValueStorage>.CopyFrom(IDictionary<TKey, TValue>) SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnAfterDeserialize() SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnBeforeSerialize() Namespace : Global Assembly : TowerDefense.dll Syntax public class SerializableDictionary<TKey, TValue, TValueStorage> : SerializableDictionaryBase<TKey, TValue, TValueStorage>, IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IReadOnlyDictionary<TKey, TValue>, IReadOnlyCollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable, ISerializationCallbackReceiver where TValueStorage : SerializableDictionary.Storage<TValue>, new() Type Parameters Name Description TKey TValue TValueStorage Constructors SerializableDictionary() Declaration public SerializableDictionary() SerializableDictionary(IDictionary<TKey, TValue>) Declaration public SerializableDictionary(IDictionary<TKey, TValue> dict) Parameters Type Name Description IDictionary <TKey, TValue> dict SerializableDictionary(SerializationInfo, StreamingContext) Declaration protected SerializableDictionary(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Methods GetValue(TValueStorage[], Int32) Declaration protected override TValue GetValue(TValueStorage[] storage, int i) Parameters Type Name Description TValueStorage[] storage Int32 i Returns Type Description TValue Overrides SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetValue(TValueStorage[], System.Int32) SetValue(TValueStorage[], Int32, TValue) Declaration protected override void SetValue(TValueStorage[] storage, int i, TValue value) Parameters Type Name Description TValueStorage[] storage Int32 i TValue value Overrides SerializableDictionaryBase<TKey, TValue, TValueStorage>.SetValue(TValueStorage[], System.Int32, TValue)"
  },
  "api/Global.SerializableDictionaryBase-3.html": {
    "href": "api/Global.SerializableDictionaryBase-3.html",
    "title": "Class SerializableDictionaryBase<TKey, TValue, TValueStorage> | Tower Defense",
    "keywords": "Class SerializableDictionaryBase<TKey, TValue, TValueStorage> Inheritance Object Dictionary <TKey, TValue> SerializableDictionaryBase<TKey, TValue, TValueStorage> SerializableDictionary<TKey, TValue> SerializableDictionary<TKey, TValue, TValueStorage> Namespace : Global Assembly : TowerDefense.dll Syntax public abstract class SerializableDictionaryBase<TKey, TValue, TValueStorage> : Dictionary<TKey, TValue>, IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IReadOnlyDictionary<TKey, TValue>, IReadOnlyCollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable, ISerializationCallbackReceiver Type Parameters Name Description TKey TValue TValueStorage Constructors SerializableDictionaryBase() Declaration public SerializableDictionaryBase() SerializableDictionaryBase(IDictionary<TKey, TValue>) Declaration public SerializableDictionaryBase(IDictionary<TKey, TValue> dict) Parameters Type Name Description IDictionary <TKey, TValue> dict SerializableDictionaryBase(SerializationInfo, StreamingContext) Declaration protected SerializableDictionaryBase(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Methods CopyFrom(IDictionary<TKey, TValue>) Declaration public void CopyFrom(IDictionary<TKey, TValue> dict) Parameters Type Name Description IDictionary <TKey, TValue> dict GetValue(TValueStorage[], Int32) Declaration protected abstract TValue GetValue(TValueStorage[] storage, int i) Parameters Type Name Description TValueStorage[] storage Int32 i Returns Type Description TValue OnAfterDeserialize() Declaration public void OnAfterDeserialize() OnBeforeSerialize() Declaration public void OnBeforeSerialize() SetValue(TValueStorage[], Int32, TValue) Declaration protected abstract void SetValue(TValueStorage[] storage, int i, TValue value) Parameters Type Name Description TValueStorage[] storage Int32 i TValue value"
  },
  "api/Global.SerializableDictionaryPropertyDrawer.html": {
    "href": "api/Global.SerializableDictionaryPropertyDrawer.html",
    "title": "Class SerializableDictionaryPropertyDrawer | Tower Defense",
    "keywords": "Class SerializableDictionaryPropertyDrawer Inheritance Object UnityEditor.GUIDrawer UnityEditor.PropertyDrawer SerializableDictionaryPropertyDrawer TowerTypeBoolDictionaryPropertyDrawer Namespace : Global Assembly : TowerDefenseEditor.dll Syntax public class SerializableDictionaryPropertyDrawer : PropertyDrawer Fields IndentWidth Declaration protected const float IndentWidth = 15F Field Value Type Description Single Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description UnityEditor.SerializedProperty property UnityEngine.GUIContent label Returns Type Description Single Overrides UnityEditor.PropertyDrawer.GetPropertyHeight(UnityEditor.SerializedProperty, UnityEngine.GUIContent) GetPropertyValue(SerializedProperty) Declaration public static object GetPropertyValue(SerializedProperty p) Parameters Type Name Description UnityEditor.SerializedProperty p Returns Type Description Object OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description UnityEngine.Rect position UnityEditor.SerializedProperty property UnityEngine.GUIContent label Overrides UnityEditor.PropertyDrawer.OnGUI(UnityEngine.Rect, UnityEditor.SerializedProperty, UnityEngine.GUIContent)"
  },
  "api/Global.SerializableDictionaryStoragePropertyDrawer.html": {
    "href": "api/Global.SerializableDictionaryStoragePropertyDrawer.html",
    "title": "Class SerializableDictionaryStoragePropertyDrawer | Tower Defense",
    "keywords": "Class SerializableDictionaryStoragePropertyDrawer Inheritance Object UnityEditor.GUIDrawer UnityEditor.PropertyDrawer SerializableDictionaryStoragePropertyDrawer Namespace : Global Assembly : TowerDefenseEditor.dll Syntax public class SerializableDictionaryStoragePropertyDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description UnityEditor.SerializedProperty property UnityEngine.GUIContent label Returns Type Description Single Overrides UnityEditor.PropertyDrawer.GetPropertyHeight(UnityEditor.SerializedProperty, UnityEngine.GUIContent) OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description UnityEngine.Rect position UnityEditor.SerializedProperty property UnityEngine.GUIContent label Overrides UnityEditor.PropertyDrawer.OnGUI(UnityEngine.Rect, UnityEditor.SerializedProperty, UnityEngine.GUIContent)"
  },
  "api/Global.Spawner.html": {
    "href": "api/Global.Spawner.html",
    "title": "Class Spawner | Tower Defense",
    "keywords": "Class Spawner Enemy spawner. Implementation of the wave system. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour Spawner Namespace : Global Assembly : TowerDefense.dll Syntax public class Spawner : MonoBehaviour Fields bonusEnemy Declaration public GameObject bonusEnemy Field Value Type Description UnityEngine.GameObject bonusWave Declaration public int bonusWave Field Value Type Description Int32 cooldownPeriod Declaration public float cooldownPeriod Field Value Type Description Single enemies Declaration public GameObject[] enemies Field Value Type Description UnityEngine.GameObject [] enemyList Declaration public static List<GameObject> enemyList Field Value Type Description List < UnityEngine.GameObject > setNumber Declaration public int setNumber Field Value Type Description Int32 setPeriod Declaration public float setPeriod Field Value Type Description Single spawnPoints Declaration public Transform[] spawnPoints Field Value Type Description Transform [] spawnRate Declaration public float spawnRate Field Value Type Description Single waveSetSize Declaration public int waveSetSize Field Value Type Description Int32 Methods StartWave() Declaration public void StartWave()"
  },
  "api/Global.TDEvent.html": {
    "href": "api/Global.TDEvent.html",
    "title": "Class TDEvent | Tower Defense",
    "keywords": "Class TDEvent An event that takes callbacks with no parameters Inheritance Object UnityEngine.Events.UnityEventBase UnityEngine.Events.UnityEvent TDEvent Namespace : Global Assembly : TowerDefense.dll Syntax public class TDEvent : UnityEvent, ISerializationCallbackReceiver"
  },
  "api/Global.TDEvent-1.html": {
    "href": "api/Global.TDEvent-1.html",
    "title": "Class TDEvent<TParam> | Tower Defense",
    "keywords": "Class TDEvent<TParam> An event that takes callbacks with one parameter Inheritance Object UnityEngine.Events.UnityEventBase UnityEngine.Events.UnityEvent <TParam> TDEvent<TParam> Namespace : Global Assembly : TowerDefense.dll Syntax public class TDEvent<TParam> : UnityEvent<TParam>, ISerializationCallbackReceiver Type Parameters Name Description TParam Type of the parameter"
  },
  "api/Global.TDEvent-2.html": {
    "href": "api/Global.TDEvent-2.html",
    "title": "Class TDEvent<TParam1, TParam2> | Tower Defense",
    "keywords": "Class TDEvent<TParam1, TParam2> An event that takes callbacks with two parameters Inheritance Object UnityEngine.Events.UnityEventBase UnityEngine.Events.UnityEvent <TParam1, TParam2> TDEvent<TParam1, TParam2> Namespace : Global Assembly : TowerDefense.dll Syntax public class TDEvent<TParam1, TParam2> : UnityEvent<TParam1, TParam2>, ISerializationCallbackReceiver Type Parameters Name Description TParam1 Type of the first parameter TParam2 Type of the second parameter"
  },
  "api/Global.TDEvent-3.html": {
    "href": "api/Global.TDEvent-3.html",
    "title": "Class TDEvent<TParam1, TParam2, TParam3> | Tower Defense",
    "keywords": "Class TDEvent<TParam1, TParam2, TParam3> An event that takes callbacks with three parameters Inheritance Object UnityEngine.Events.UnityEventBase UnityEvent <TParam1, TParam2, TParam3> TDEvent<TParam1, TParam2, TParam3> Namespace : Global Assembly : TowerDefense.dll Syntax public class TDEvent<TParam1, TParam2, TParam3> : UnityEvent<TParam1, TParam2, TParam3>, ISerializationCallbackReceiver Type Parameters Name Description TParam1 Type of the first parameter TParam2 Type of the second parameter TParam3 Type of the third parameter"
  },
  "api/Global.TestCallback.html": {
    "href": "api/Global.TestCallback.html",
    "title": "Class TestCallback | Tower Defense",
    "keywords": "Class TestCallback A class to test the event system.false Place callbacks here. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour TestCallback Namespace : Global Assembly : TowerDefense.dll Syntax public class TestCallback : MonoBehaviour"
  },
  "api/Global.TestEventCall.html": {
    "href": "api/Global.TestEventCall.html",
    "title": "Class TestEventCall | Tower Defense",
    "keywords": "Class TestEventCall A class to test the event system. Fire events here. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour TestEventCall Namespace : Global Assembly : TowerDefense.dll Syntax public class TestEventCall : MonoBehaviour"
  },
  "api/Global.TowerMenuUISystem.html": {
    "href": "api/Global.TowerMenuUISystem.html",
    "title": "Class TowerMenuUISystem | Tower Defense",
    "keywords": "Class TowerMenuUISystem Brings up the tower menu when a tower is selected. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour TowerMenuUISystem Implements IUISystem Namespace : Global Assembly : TowerDefense.dll Syntax public class TowerMenuUISystem : MonoBehaviour, IUISystem Methods Hide() Declaration public void Hide() OnMoveClick() Callback for the Move button Declaration public void OnMoveClick() OnUpgradeClick() Callback for the upgrade button. Declaration public void OnUpgradeClick() Show(GameObject) Declaration public void Show(GameObject tower) Parameters Type Name Description UnityEngine.GameObject tower Implements IUISystem"
  },
  "api/Global.TowerPlacementSystem.html": {
    "href": "api/Global.TowerPlacementSystem.html",
    "title": "Class TowerPlacementSystem | Tower Defense",
    "keywords": "Class TowerPlacementSystem System to place towers. Sets up the TowerPlacer. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour TowerPlacementSystem Namespace : Global Assembly : TowerDefense.dll Syntax public class TowerPlacementSystem : MonoBehaviour Fields PlacerPrefab Prefab to use as the TowerPlacer. Declaration public GameObject PlacerPrefab Field Value Type Description UnityEngine.GameObject Methods TogglePlacer(GameObject, Vector3, Boolean) Callback for the togglePlacer event. Toggles the TowerPlacer. Declaration public void TogglePlacer(GameObject targetTower, Vector3 location, bool isMove) Parameters Type Name Description UnityEngine.GameObject targetTower The tower to create with this placer. UnityEngine.Vector3 location The position to create the placer at. Boolean isMove Whether we are moving or creating a new tower."
  },
  "api/Global.TowerPlacer.html": {
    "href": "api/Global.TowerPlacer.html",
    "title": "Class TowerPlacer | Tower Defense",
    "keywords": "Class TowerPlacer Implements the tower placement location selector. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour TowerPlacer Namespace : Global Assembly : TowerDefense.dll Syntax public class TowerPlacer : MonoBehaviour Fields TowerObject A reference to the tower prefab that is to be placed. Declaration public GameObject TowerObject Field Value Type Description UnityEngine.GameObject Methods CheckTransaction() Declaration public bool CheckTransaction() Returns Type Description Boolean MoveTransaction(Boolean) Declaration public void MoveTransaction(bool confirmation) Parameters Type Name Description Boolean confirmation PlaceTower() Instantiate the tower. Declaration public bool PlaceTower() Returns Type Description Boolean True if successfully instantiated the tower. SetTower(GameObject, Boolean) Set the tower prefab to be placed. Declaration public void SetTower(GameObject reference, bool isMove) Parameters Type Name Description UnityEngine.GameObject reference The tower object to create. Boolean isMove Whether this placer is for moving a tower or creating a new one."
  },
  "api/Global.TowerType.html": {
    "href": "api/Global.TowerType.html",
    "title": "Class TowerType | Tower Defense",
    "keywords": "Class TowerType A component that can be attached to buttons to check what tower they are associated with in a safe way with an enum Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour TowerType Namespace : Global Assembly : TowerDefense.dll Syntax public class TowerType : MonoBehaviour Fields Type Declaration public ETowerType Type Field Value Type Description ETowerType"
  },
  "api/Global.TowerTypeBoolDictionary.html": {
    "href": "api/Global.TowerTypeBoolDictionary.html",
    "title": "Class TowerTypeBoolDictionary | Tower Defense",
    "keywords": "Class TowerTypeBoolDictionary Inheritance Object Dictionary < ETowerType , Boolean > SerializableDictionaryBase < ETowerType , Boolean , Boolean > SerializableDictionary < ETowerType , Boolean > TowerTypeBoolDictionary Inherited Members SerializableDictionary<ETowerType, Boolean>.GetValue(Boolean[], Int32) SerializableDictionary<ETowerType, Boolean>.SetValue(Boolean[], Int32, Boolean) SerializableDictionaryBase<ETowerType, Boolean, Boolean>.SetValue(Boolean[], Int32, Boolean) SerializableDictionaryBase<ETowerType, Boolean, Boolean>.GetValue(Boolean[], Int32) SerializableDictionaryBase<ETowerType, Boolean, Boolean>.CopyFrom(IDictionary<ETowerType, Boolean>) SerializableDictionaryBase<ETowerType, Boolean, Boolean>.OnAfterDeserialize() SerializableDictionaryBase<ETowerType, Boolean, Boolean>.OnBeforeSerialize() Namespace : Global Assembly : TowerDefense.dll Syntax [Serializable] public class TowerTypeBoolDictionary : SerializableDictionary<ETowerType, bool>, IDictionary<ETowerType, bool>, ICollection<KeyValuePair<ETowerType, bool>>, IReadOnlyDictionary<ETowerType, bool>, IReadOnlyCollection<KeyValuePair<ETowerType, bool>>, IEnumerable<KeyValuePair<ETowerType, bool>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable, ISerializationCallbackReceiver"
  },
  "api/Global.TowerTypeBoolDictionaryPropertyDrawer.html": {
    "href": "api/Global.TowerTypeBoolDictionaryPropertyDrawer.html",
    "title": "Class TowerTypeBoolDictionaryPropertyDrawer | Tower Defense",
    "keywords": "Class TowerTypeBoolDictionaryPropertyDrawer Inheritance Object UnityEditor.GUIDrawer UnityEditor.PropertyDrawer SerializableDictionaryPropertyDrawer TowerTypeBoolDictionaryPropertyDrawer Inherited Members SerializableDictionaryPropertyDrawer.IndentWidth SerializableDictionaryPropertyDrawer.OnGUI(Rect, SerializedProperty, GUIContent) SerializableDictionaryPropertyDrawer.GetPropertyHeight(SerializedProperty, GUIContent) SerializableDictionaryPropertyDrawer.GetPropertyValue(SerializedProperty) Namespace : Global Assembly : TowerDefenseEditor.dll Syntax [CustomPropertyDrawer(typeof(TowerTypeBoolDictionary))] public class TowerTypeBoolDictionaryPropertyDrawer : SerializableDictionaryPropertyDrawer"
  },
  "api/Global.UIManager.html": {
    "href": "api/Global.UIManager.html",
    "title": "Class UIManager | Tower Defense",
    "keywords": "Class UIManager Manager class that holds references to all UI layers and handles the UI stack. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour UIManager Namespace : Global Assembly : TowerDefense.dll Syntax public class UIManager : MonoBehaviour Methods HideMenu() Declaration public void HideMenu() Pause() Declaration public void Pause() ShowMenu(GameObject, Type) Declaration public void ShowMenu(GameObject tower, Type type) Parameters Type Name Description UnityEngine.GameObject tower Type type"
  },
  "api/Global.UpgradeMenuUISystem.html": {
    "href": "api/Global.UpgradeMenuUISystem.html",
    "title": "Class UpgradeMenuUISystem | Tower Defense",
    "keywords": "Class UpgradeMenuUISystem Manager class for tower upgrades. Handles UI and tower object instantiation/deletion. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour UpgradeMenuUISystem Implements IUISystem Namespace : Global Assembly : TowerDefense.dll Syntax public class UpgradeMenuUISystem : MonoBehaviour, IUISystem Methods CancelTowerCreation() Callback for \"cancelTowerCreation\" event. Called when upgrade confirmation dialog is closed. Declaration public void CancelTowerCreation() CreateTower(ETowerType) Callback for the \"createTower\" event. Called when the upgrade is confirmed through the dialog box. Declaration public void CreateTower(ETowerType type) Parameters Type Name Description ETowerType type Type of the tower to create Hide() Declaration public void Hide() OnClick(String) Callback for the Upgrade UI. String indicating the type of tower upgrade requested. Declaration public void OnClick(string type) Parameters Type Name Description String type Show(GameObject) Declaration public void Show(GameObject tower) Parameters Type Name Description UnityEngine.GameObject tower Implements IUISystem"
  },
  "api/Global.UpgradeTree.html": {
    "href": "api/Global.UpgradeTree.html",
    "title": "Class UpgradeTree | Tower Defense",
    "keywords": "Class UpgradeTree This component stores information about possible upgrades in the upgrade tree. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour UpgradeTree Namespace : Global Assembly : TowerDefense.dll Syntax public class UpgradeTree : MonoBehaviour Fields valuePairs Declaration public TowerTypeBoolDictionary valuePairs Field Value Type Description TowerTypeBoolDictionary"
  },
  "api/Global.UserReportingConfigureOnly.html": {
    "href": "api/Global.UserReportingConfigureOnly.html",
    "title": "Class UserReportingConfigureOnly | Tower Defense",
    "keywords": "Class UserReportingConfigureOnly Represents a behavior that configures user reporting, but does not provide any additional functionality. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour UserReportingConfigureOnly Namespace : Global Assembly : UserReporting.dll Syntax public class UserReportingConfigureOnly : MonoBehaviour"
  },
  "api/Global.UserReportingMonitor.html": {
    "href": "api/Global.UserReportingMonitor.html",
    "title": "Class UserReportingMonitor | Tower Defense",
    "keywords": "Class UserReportingMonitor Represents a behavior that monitors the application for issues and automatically submits a user report. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour UserReportingMonitor FramerateMonitor Namespace : Global Assembly : UserReporting.dll Syntax public class UserReportingMonitor : MonoBehaviour Constructors | Improve this Doc View Source UserReportingMonitor() Creates a new instance of the UserReportingMonitor class. Declaration public UserReportingMonitor() Fields | Improve this Doc View Source IsEnabled Gets or sets a value indicating whether the monitor is enabled. Declaration public bool IsEnabled Field Value Type Description Boolean | Improve this Doc View Source IsEnabledAfterTrigger Gets or sets a value indicating whether the monitor is enabled after it is triggered. Declaration public bool IsEnabledAfterTrigger Field Value Type Description Boolean | Improve this Doc View Source IsHiddenWithoutDimension Gets or sets a value indicating whether the user report has IsHiddenWithoutDimension set. Declaration public bool IsHiddenWithoutDimension Field Value Type Description Boolean | Improve this Doc View Source MonitorName Gets or sets the monitor name. Declaration public string MonitorName Field Value Type Description String | Improve this Doc View Source Summary Gets or sets the summary. Declaration public string Summary Field Value Type Description String Methods | Improve this Doc View Source Trigger() Triggers the monitor. Declaration public void Trigger() | Improve this Doc View Source Triggered() Called when the monitor is triggered. Declaration protected virtual void Triggered()"
  },
  "api/Global.UserReportingPlatformType.html": {
    "href": "api/Global.UserReportingPlatformType.html",
    "title": "Enum UserReportingPlatformType | Tower Defense",
    "keywords": "Enum UserReportingPlatformType Namespace : Global Assembly : UserReporting.dll Syntax [Serializable] public enum UserReportingPlatformType Fields Name Description Async Default"
  },
  "api/Global.UserReportingScript.html": {
    "href": "api/Global.UserReportingScript.html",
    "title": "Class UserReportingScript | Tower Defense",
    "keywords": "Class UserReportingScript Represents a behavior for working with the user reporting client. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour UserReportingScript Namespace : Global Assembly : UserReporting.dll Syntax public class UserReportingScript : MonoBehaviour Remarks This script is provided as a sample and isn't necessarily the most optimal solution for your project. You may want to consider replacing with this script with your own script in the future. Constructors | Improve this Doc View Source UserReportingScript() Creates a new instance of the UserReportingScript class. Declaration public UserReportingScript() Fields | Improve this Doc View Source CategoryDropdown Gets or sets the category dropdown. Declaration [Tooltip(\"The category dropdown.\")] public Dropdown CategoryDropdown Field Value Type Description UnityEngine.UI.Dropdown | Improve this Doc View Source DescriptionInput Gets or sets the description input on the user report form. Declaration [Tooltip(\"The description input on the user report form.\")] public InputField DescriptionInput Field Value Type Description UnityEngine.UI.InputField | Improve this Doc View Source ErrorPopup Gets or sets the UI shown when there's an error. Declaration [Tooltip(\"The UI shown when there's an error.\")] public Canvas ErrorPopup Field Value Type Description UnityEngine.Canvas | Improve this Doc View Source IsHotkeyEnabled Gets or sets a value indicating whether the hotkey is enabled (Left Alt + Left Shift + B). Declaration [Tooltip(\"A value indicating whether the hotkey is enabled (Left Alt + Left Shift + B).\")] public bool IsHotkeyEnabled Field Value Type Description Boolean | Improve this Doc View Source IsInSilentMode Gets or sets a value indicating whether the prefab is in silent mode. Silent mode does not show the user report form. Declaration [Tooltip(\"A value indicating whether the prefab is in silent mode. Silent mode does not show the user report form.\")] public bool IsInSilentMode Field Value Type Description Boolean | Improve this Doc View Source IsSelfReporting Gets or sets a value indicating whether the user report client reports metrics about itself. Declaration [Tooltip(\"A value indicating whether the user report client reports metrics about itself.\")] public bool IsSelfReporting Field Value Type Description Boolean | Improve this Doc View Source ProgressText Gets or sets the display text for the progress text. Declaration [Tooltip(\"The display text for the progress text.\")] public Text ProgressText Field Value Type Description UnityEngine.UI.Text | Improve this Doc View Source SendEventsToAnalytics Gets or sets a value indicating whether the user report client send events to analytics. Declaration [Tooltip(\"A value indicating whether the user report client send events to analytics.\")] public bool SendEventsToAnalytics Field Value Type Description Boolean | Improve this Doc View Source SubmittingPopup Gets or sets the UI shown while submitting. Declaration [Tooltip(\"The UI shown while submitting.\")] public Canvas SubmittingPopup Field Value Type Description UnityEngine.Canvas | Improve this Doc View Source SummaryInput Gets or sets the summary input on the user report form. Declaration [Tooltip(\"The summary input on the user report form.\")] public InputField SummaryInput Field Value Type Description UnityEngine.UI.InputField | Improve this Doc View Source ThumbnailViewer Gets or sets the thumbnail viewer on the user report form. Declaration [Tooltip(\"The thumbnail viewer on the user report form.\")] public Image ThumbnailViewer Field Value Type Description UnityEngine.UI.Image | Improve this Doc View Source UserReportButton Gets or sets the user report button used to create a user report. Declaration [Tooltip(\"The user report button used to create a user report.\")] public Button UserReportButton Field Value Type Description UnityEngine.UI.Button | Improve this Doc View Source UserReportForm Gets or sets the UI for the user report form. Shown after a user report is created. Declaration [Tooltip(\"The UI for the user report form. Shown after a user report is created.\")] public Canvas UserReportForm Field Value Type Description UnityEngine.Canvas | Improve this Doc View Source UserReportingPlatform Gets or sets the User Reporting platform. Different platforms have different features but may require certain Unity versions or target platforms. The Async platform adds async screenshotting and report creation, but requires Unity 2018.3 and above, the package manager version of Unity User Reporting, and a target platform that supports asynchronous GPU readback such as DirectX. Declaration [Tooltip(\"The User Reporting platform. Different platforms have different features but may require certain Unity versions or target platforms. The Async platform adds async screenshotting and report creation, but requires Unity 2018.3 and above, the package manager version of Unity User Reporting, and a target platform that supports asynchronous GPU readback such as DirectX.\")] public UserReportingPlatformType UserReportingPlatform Field Value Type Description UserReportingPlatformType | Improve this Doc View Source UserReportSubmitting Gets or sets the UI for the event raised when a user report is submitting. Declaration [Tooltip(\"The event raised when a user report is submitting.\")] public UnityEvent UserReportSubmitting Field Value Type Description UnityEngine.Events.UnityEvent Properties | Improve this Doc View Source CurrentUserReport Gets the current user report. Declaration public UserReport CurrentUserReport { get; } Property Value Type Description Unity.Cloud.UserReporting.UserReport | Improve this Doc View Source State Gets the current state. Declaration public UserReportingState State { get; } Property Value Type Description UserReportingState Methods | Improve this Doc View Source CancelUserReport() Cancels the user report. Declaration public void CancelUserReport() | Improve this Doc View Source CreateUserReport() Creates a user report. Declaration public void CreateUserReport() | Improve this Doc View Source IsSubmitting() Gets a value indicating whether the user report is submitting. Declaration public bool IsSubmitting() Returns Type Description Boolean A value indicating whether the user report is submitting. | Improve this Doc View Source RaiseUserReportSubmitting() Occurs when a user report is submitting. Declaration protected virtual void RaiseUserReportSubmitting() | Improve this Doc View Source SubmitUserReport() Submits the user report. Declaration public void SubmitUserReport()"
  },
  "api/Global.UserReportingState.html": {
    "href": "api/Global.UserReportingState.html",
    "title": "Enum UserReportingState | Tower Defense",
    "keywords": "Enum UserReportingState Represents a user reporting state. Namespace : Global Assembly : UserReporting.dll Syntax public enum UserReportingState Fields Name Description CreatingUserReport Creating bug report. Idle Idle. ShowingForm Showing form. SubmittingForm Submitting form."
  },
  "api/Global.UserReportingXRExtensions.html": {
    "href": "api/Global.UserReportingXRExtensions.html",
    "title": "Class UserReportingXRExtensions | Tower Defense",
    "keywords": "Class UserReportingXRExtensions Represents a behavior that collects XR information for user reports. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour UserReportingXRExtensions Namespace : Global Assembly : UserReporting.dll Syntax public class UserReportingXRExtensions : MonoBehaviour Remarks If you're using an older version of Unity and don't need XR support, feel free to delete this script."
  },
  "api/Global.WalletUISystem.html": {
    "href": "api/Global.WalletUISystem.html",
    "title": "Class WalletUISystem | Tower Defense",
    "keywords": "Class WalletUISystem Controls the wallet UI on screen. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour WalletUISystem Namespace : Global Assembly : TowerDefense.dll Syntax public class WalletUISystem : MonoBehaviour Methods OnCancelClickMove() Passed as a callback for the Cancel button on the move dialog. Declaration public void OnCancelClickMove() OnCancelClickUpgrade() Passed as a callback for the Cancel button on the upgrade dialog. Declaration public void OnCancelClickUpgrade() OnOKClickMove() Passed as a callback for the OK button on the move dialog. Declaration public void OnOKClickMove() OnOKClickUpgrade() Passed as a callback for the OK button on the upgrade dialog. Declaration public void OnOKClickUpgrade() ShowMoveDialog(ETowerType) Callback for \"showMoveDialog\" event. Generates content for the move confirmation dialog and enables it. Declaration public void ShowMoveDialog(ETowerType type) Parameters Type Name Description ETowerType type ShowUpgradeDialog(ETowerType) Callback for \"showUpgradeDialog\" event. Generates content for the upgrade confirmation dialog and enables it. Declaration public void ShowUpgradeDialog(ETowerType type) Parameters Type Name Description ETowerType type"
  },
  "api/Global.WaveTimerUI.html": {
    "href": "api/Global.WaveTimerUI.html",
    "title": "Class WaveTimerUI | Tower Defense",
    "keywords": "Class WaveTimerUI Controls the wave timer on screen. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour WaveTimerUI Namespace : Global Assembly : TowerDefense.dll Syntax public class WaveTimerUI : MonoBehaviour Methods SetHeading(String) Set the heading on the screen. Declaration public void SetHeading(string textHeading) Parameters Type Name Description String textHeading String to be set as heading. SetTimer(String) Set the text on the timer. Declaration public void SetTimer(string textTimer) Parameters Type Name Description String textTimer String to be set on the timer."
  },
  "api/Tests.Gameplay.BattleTests.html": {
    "href": "api/Tests.Gameplay.BattleTests.html",
    "title": "Class BattleTests | Tower Defense",
    "keywords": "Class BattleTests Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour BattleTests Namespace : Tests.Gameplay Assembly : RuntimeTests.dll Syntax public class BattleTests : MonoBehaviour Methods SetUp() Declaration [SetUp] public void SetUp() TowerAttacksNearestEnemy() Declaration [UnityTest] public IEnumerator TowerAttacksNearestEnemy() Returns Type Description IEnumerator TowerRevertsToIdleOnTargetLose() Declaration [UnityTest] public IEnumerator TowerRevertsToIdleOnTargetLose() Returns Type Description IEnumerator TowersAttacksEnemies() Declaration [UnityTest] public IEnumerator TowersAttacksEnemies() Returns Type Description IEnumerator TowerStopsAttackingWhenEnemyIsOutOfRange() Declaration [UnityTest] public IEnumerator TowerStopsAttackingWhenEnemyIsOutOfRange() Returns Type Description IEnumerator"
  },
  "api/Tests.Gameplay.DamageableTests.html": {
    "href": "api/Tests.Gameplay.DamageableTests.html",
    "title": "Class DamageableTests | Tower Defense",
    "keywords": "Class DamageableTests Inheritance Object DamageableTests Namespace : Tests.Gameplay Assembly : RuntimeTests.dll Syntax public class DamageableTests Methods DamageTowers() Declaration [UnityTest] public IEnumerator DamageTowers() Returns Type Description IEnumerator SetUp() Declaration [SetUp] public void SetUp()"
  },
  "api/Tests.Gameplay.DetectionTests.html": {
    "href": "api/Tests.Gameplay.DetectionTests.html",
    "title": "Class DetectionTests | Tower Defense",
    "keywords": "Class DetectionTests Inheritance Object DetectionTests Namespace : Tests.Gameplay Assembly : RuntimeTests.dll Syntax public class DetectionTests Methods SetUp() Declaration [SetUp] public void SetUp() TowersDetectsEnemies() Declaration [UnityTest] public IEnumerator TowersDetectsEnemies() Returns Type Description IEnumerator"
  },
  "api/Tests.Gameplay.EditModeSampleTest.html": {
    "href": "api/Tests.Gameplay.EditModeSampleTest.html",
    "title": "Class EditModeSampleTest | Tower Defense",
    "keywords": "Class EditModeSampleTest Sample editor tests Inheritance Object EditModeSampleTest Namespace : Tests.Gameplay Assembly : EditorTests.dll Syntax public class EditModeSampleTest Methods EditModeSampleTestSimplePasses() Declaration [Test] public void EditModeSampleTestSimplePasses() EditModeSampleTestWithEnumeratorPasses() Declaration [UnityTest] public IEnumerator EditModeSampleTestWithEnumeratorPasses() Returns Type Description IEnumerator"
  },
  "api/Tests.Gameplay.html": {
    "href": "api/Tests.Gameplay.html",
    "title": "Namespace Tests.Gameplay | Tower Defense",
    "keywords": "Namespace Tests.Gameplay Classes BattleTests DamageableTests DetectionTests EditModeSampleTest Sample editor tests MovementTests Tests for player movement systems TowerPlacerTests Tests for tower placement indicator WaveTests Tests for the wave Spawner"
  },
  "api/Tests.Gameplay.MovementTests.html": {
    "href": "api/Tests.Gameplay.MovementTests.html",
    "title": "Class MovementTests | Tower Defense",
    "keywords": "Class MovementTests Tests for player movement systems Inheritance Object MovementTests Namespace : Tests.Gameplay Assembly : RuntimeTests.dll Syntax public class MovementTests Methods AIMovePlayer() Declaration [UnityTest] public IEnumerator AIMovePlayer() Returns Type Description IEnumerator Setup() Declaration [SetUp] public void Setup()"
  },
  "api/Tests.Gameplay.TowerPlacerTests.html": {
    "href": "api/Tests.Gameplay.TowerPlacerTests.html",
    "title": "Class TowerPlacerTests | Tower Defense",
    "keywords": "Class TowerPlacerTests Tests for tower placement indicator Inheritance Object TowerPlacerTests Namespace : Tests.Gameplay Assembly : RuntimeTests.dll Syntax public class TowerPlacerTests Methods IndicatorCanToggle() Declaration [UnityTest] public IEnumerator IndicatorCanToggle() Returns Type Description IEnumerator IndicatorColorIsRedNearObstacles() Declaration [UnityTest] public IEnumerator IndicatorColorIsRedNearObstacles() Returns Type Description IEnumerator IndicatorPlacesTower() Declaration [UnityTest] public IEnumerator IndicatorPlacesTower() Returns Type Description IEnumerator Setup() Declaration [SetUp] public void Setup()"
  },
  "api/Tests.Gameplay.WaveTests.html": {
    "href": "api/Tests.Gameplay.WaveTests.html",
    "title": "Class WaveTests | Tower Defense",
    "keywords": "Class WaveTests Tests for the wave Spawner Inheritance Object WaveTests Namespace : Tests.Gameplay Assembly : RuntimeTests.dll Syntax public class WaveTests Methods SetUp() Declaration [SetUp] public void SetUp() SpawnerCanTriggerBonusWave() Declaration [UnityTest] public IEnumerator SpawnerCanTriggerBonusWave() Returns Type Description IEnumerator SpawnerSpawnsAtRegularIntervals() Declaration [UnityTest] public IEnumerator SpawnerSpawnsAtRegularIntervals() Returns Type Description IEnumerator SpawnerSpawnsEnemies() Declaration [UnityTest] public IEnumerator SpawnerSpawnsEnemies() Returns Type Description IEnumerator"
  },
  "api/Tests.UI.DialogTests.html": {
    "href": "api/Tests.UI.DialogTests.html",
    "title": "Class DialogTests | Tower Defense",
    "keywords": "Class DialogTests TODO: Tests for the dialog box Inheritance Object DialogTests Namespace : Tests.UI Assembly : RuntimeTests.dll Syntax public class DialogTests Methods CanCreateUpgradeUIMenu() Declaration [UnityTest] public IEnumerator CanCreateUpgradeUIMenu() Returns Type Description IEnumerator Setup() Declaration [SetUp] public void Setup()"
  },
  "api/Tests.UI.html": {
    "href": "api/Tests.UI.html",
    "title": "Namespace Tests.UI | Tower Defense",
    "keywords": "Namespace Tests.UI Classes DialogTests TODO: Tests for the dialog box TowerUIMenuTests Tests for the tower menu UI functions UpgradeUIMenuTests Tests for the UpgradeMenuUISystem WalletUITests TODO: Tests for the WalletUI WaveUITests Tests for the wave indicator UI"
  },
  "api/Tests.UI.TowerUIMenuTests.html": {
    "href": "api/Tests.UI.TowerUIMenuTests.html",
    "title": "Class TowerUIMenuTests | Tower Defense",
    "keywords": "Class TowerUIMenuTests Tests for the tower menu UI functions Inheritance Object TowerUIMenuTests Namespace : Tests.UI Assembly : RuntimeTests.dll Syntax public class TowerUIMenuTests Methods ClickingOnTowerBringsUpUI() Declaration [UnityTest] public IEnumerator ClickingOnTowerBringsUpUI() Returns Type Description IEnumerator EscapeKeyMakesUIGoAway() Declaration [UnityTest] public IEnumerator EscapeKeyMakesUIGoAway() Returns Type Description IEnumerator Setup() Declaration [SetUp] public void Setup() StartTowerMoveFromTowerUI() Declaration [UnityTest] public IEnumerator StartTowerMoveFromTowerUI() Returns Type Description IEnumerator StartTowerUpgradeFromTowerMenuUI() Declaration [UnityTest] public IEnumerator StartTowerUpgradeFromTowerMenuUI() Returns Type Description IEnumerator"
  },
  "api/Tests.UI.UpgradeUIMenuTests.html": {
    "href": "api/Tests.UI.UpgradeUIMenuTests.html",
    "title": "Class UpgradeUIMenuTests | Tower Defense",
    "keywords": "Class UpgradeUIMenuTests Tests for the UpgradeMenuUISystem Inheritance Object UpgradeUIMenuTests Namespace : Tests.UI Assembly : RuntimeTests.dll Syntax public class UpgradeUIMenuTests Methods CanCreateUpgradeUIMenu() Declaration [UnityTest] public IEnumerator CanCreateUpgradeUIMenu() Returns Type Description IEnumerator CanUpgradeToRedTower() Declaration [UnityTest] public IEnumerator CanUpgradeToRedTower() Returns Type Description IEnumerator EscapeKeyMakesUIGoAway() Declaration [UnityTest] public IEnumerator EscapeKeyMakesUIGoAway() Returns Type Description IEnumerator Setup() Declaration [SetUp] public void Setup()"
  },
  "api/Tests.UI.WalletUITests.html": {
    "href": "api/Tests.UI.WalletUITests.html",
    "title": "Class WalletUITests | Tower Defense",
    "keywords": "Class WalletUITests TODO: Tests for the WalletUI Inheritance Object WalletUITests Namespace : Tests.UI Assembly : RuntimeTests.dll Syntax public class WalletUITests Methods CanCreateUpgradeUIMenu() Declaration [UnityTest] public IEnumerator CanCreateUpgradeUIMenu() Returns Type Description IEnumerator Setup() Declaration [SetUp] public void Setup()"
  },
  "api/Tests.UI.WaveUITests.html": {
    "href": "api/Tests.UI.WaveUITests.html",
    "title": "Class WaveUITests | Tower Defense",
    "keywords": "Class WaveUITests Tests for the wave indicator UI Inheritance Object WaveUITests Namespace : Tests.UI Assembly : RuntimeTests.dll Syntax public class WaveUITests Methods Setup() Declaration [SetUp] public void Setup() WaveUICanShowBonusWave() Declaration [UnityTest] public IEnumerator WaveUICanShowBonusWave() Returns Type Description IEnumerator WaveUIChangesWhenWaveStarts() Declaration [UnityTest] public IEnumerator WaveUIChangesWhenWaveStarts() Returns Type Description IEnumerator WaveUITimerChanges() Declaration [UnityTest] public IEnumerator WaveUITimerChanges() Returns Type Description IEnumerator"
  },
  "index.html": {
    "href": "index.html",
    "title": "Home Page | Tower Defense",
    "keywords": "Home Page Documentation auto-generated by DocFX. The manual is incomplete."
  },
  "manual/Events.html": {
    "href": "manual/Events.html",
    "title": "Tower Defense Event System | Tower Defense",
    "keywords": "Tower Defense Event System"
  },
  "manual/SerializableDictionary.html": {
    "href": "manual/SerializableDictionary.html",
    "title": "Usage Guide for the Serializable Dictionary | Tower Defense",
    "keywords": "Usage Guide for the Serializable Dictionary We've used azixMcAze's implementation: https://github.com/azixMcAze/Unity-SerializableDictionary Instructions Subclass SerializableDictionary . Generic classes won't be serialized. cs [System.Serializable] public class StringStringDictionary : SerializableDictionary<string, string> { } Subclass SerializableDictionaryPropertyDrawer in the Editor folder. Add the CustomPropertyDrawer attribute. cs [UnityEditor.CustomPropertyDrawer(typeof(StringStringDictionary))] public class StringStringPropertyDrawer : SerializableDictionaryPropertyDrawer { }"
  }
}