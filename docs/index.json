{
  "api/Global.AbstractBattle.html": {
    "href": "api/Global.AbstractBattle.html",
    "title": "Class AbstractBattle | Tower Defense",
    "keywords": "Class AbstractBattle Base class for combat related functionality. Enemies and towers should implement this class. This class works closely with the Detection component. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour AbstractBattle TowerBattle Namespace : Global Assembly : TowerDefense.dll Syntax public abstract class AbstractBattle : MonoBehaviour Fields Attack Attack power of this unit. This is the amount that is subtracted from the enemy's health. Declaration public float Attack Field Value Type Description Single Defense Defense stat for this unit. When attacked this unit will absorb this fraction of the applied damage. Must be between 0 and 1. Declaration public float Defense Field Value Type Description Single FireRate Rate of attack for this unit. Value must be in attacks per second. Declaration public float FireRate Field Value Type Description Single Range Detection range for this unit. It will only attack when enemies are closer than this value. Declaration public float Range Field Value Type Description Single Methods OnDetect(GameObject) Called by the Detection component to start attack processes. Declaration public abstract void OnDetect(GameObject enemy) Parameters Type Name Description UnityEngine.GameObject enemy GameObject to target OnLose() A \"reset\" for the attack processes used when the target is destroyed or lost. Declaration public abstract void OnLose() SetRange() Called in the Start function for initialization. Declaration protected abstract void SetRange()"
  },
  "api/Global.AIController.html": {
    "href": "api/Global.AIController.html",
    "title": "Class AIController | Tower Defense",
    "keywords": "Class AIController AIController class to control AI movement. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour AIController Namespace : Global Assembly : TowerDefense.dll Syntax public class AIController : MonoBehaviour Methods MoveTo(Vector3) Moves the AI object to the given point. Declaration public void MoveTo(Vector3 dest) Parameters Type Name Description UnityEngine.Vector3 dest Vector3 for the destination point"
  },
  "api/Global.Damageable.html": {
    "href": "api/Global.Damageable.html",
    "title": "Class Damageable | Tower Defense",
    "keywords": "Class Damageable Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour Damageable Namespace : Global Assembly : TowerDefense.dll Syntax public class Damageable : MonoBehaviour Properties IsDead Declaration public bool IsDead { get; } Property Value Type Description Boolean Methods ApplyDamage(Single) Subtracts the given value from health and triggers death if health reaches 0 Declaration public void ApplyDamage(float damage) Parameters Type Name Description Single damage Value to be subtracted GetHealth() Declaration public float GetHealth() Returns Type Description Single"
  },
  "api/Global.Detection.html": {
    "href": "api/Global.Detection.html",
    "title": "Class Detection | Tower Defense",
    "keywords": "Class Detection Component to detect enemies using sweeps of a \"detection cone\" Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour Detection Namespace : Global Assembly : TowerDefense.dll Syntax public class Detection : MonoBehaviour Fields ExtremeAngle Half of the maximum angle of the detection cone. Declaration public float ExtremeAngle Field Value Type Description Single NumberOfRays The number of rays to use for the detection cone. Declaration public float NumberOfRays Field Value Type Description Single Methods Reset() Resets the tower to an idle state Declaration public void Reset()"
  },
  "api/Global.DialogConfig.html": {
    "href": "api/Global.DialogConfig.html",
    "title": "Struct DialogConfig | Tower Defense",
    "keywords": "Struct DialogConfig Configuration settings for a dialog. Namespace : Global Assembly : TowerDefense.dll Syntax public struct DialogConfig Fields CancelCallback Callback for the cancel button on the dialog box. Declaration public UnityAction CancelCallback Field Value Type Description UnityEngine.Events.UnityAction Message Message to be displayed in the text field of the dialog box. Declaration public string Message Field Value Type Description String OKCallback Callback for the OK button on the dialog box. Declaration public UnityAction OKCallback Field Value Type Description UnityEngine.Events.UnityAction"
  },
  "api/Global.DialogSystem.html": {
    "href": "api/Global.DialogSystem.html",
    "title": "Class DialogSystem | Tower Defense",
    "keywords": "Class DialogSystem Handles the apprearance and disappearance of the associated dialog box. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour DialogSystem Namespace : Global Assembly : TowerDefense.dll Syntax public class DialogSystem : MonoBehaviour Methods CancelClicked() Declaration public void CancelClicked() Hide() Hide the dialog Declaration public void Hide() OKClicked() Declaration public void OKClicked() Show(DialogConfig) Show the dialog Declaration public void Show(DialogConfig config) Parameters Type Name Description DialogConfig config Settings with which the dialog should be created."
  },
  "api/Global.ETowerType.html": {
    "href": "api/Global.ETowerType.html",
    "title": "Enum ETowerType | Tower Defense",
    "keywords": "Enum ETowerType Enum for tower types. This is important to refer to towers in a safe way. Namespace : Global Assembly : TowerDefense.dll Syntax public enum ETowerType : ushort Fields Name Description Base Gold Green None Red"
  },
  "api/Global.EventRegistry.html": {
    "href": "api/Global.EventRegistry.html",
    "title": "Class EventRegistry | Tower Defense",
    "keywords": "Class EventRegistry A class to orchestrate all events Inheritance Object EventRegistry Namespace : Global Assembly : TowerDefense.dll Syntax public static class EventRegistry Methods GetEvent(String) Gets you the event associated with the key. Creates one if no event found. Declaration public static TDEvent GetEvent(string name) Parameters Type Name Description String name Key for event lookup Returns Type Description TDEvent TDEvent corresponding to the string GetEvent<TParam>(String) Declaration public static TDEvent<TParam> GetEvent<TParam>(string name) Parameters Type Name Description String name Returns Type Description TDEvent <TParam> Type Parameters Name Description TParam GetEvent<TParam1, TParam2>(String) Declaration public static TDEvent<TParam1, TParam2> GetEvent<TParam1, TParam2>(string name) Parameters Type Name Description String name Returns Type Description TDEvent <TParam1, TParam2> Type Parameters Name Description TParam1 TParam2 Invoke(String) Declaration public static void Invoke(string name) Parameters Type Name Description String name Invoke<TParam1, TParam2>(String, TParam1, TParam2) Declaration public static void Invoke<TParam1, TParam2>(string name, TParam1 param1, TParam2 param2) Parameters Type Name Description String name TParam1 param1 TParam2 param2 Type Parameters Name Description TParam1 TParam2 RegisterAction(String, UnityAction) Registers a zero argument callback for an event. Creates the event if it doesn't exist. Declaration public static bool RegisterAction(string name, UnityAction callback) Parameters Type Name Description String name Name of the event UnityEngine.Events.UnityAction callback Callback to register Returns Type Description Boolean True if successfully registered RegisterAction<TParam>(String, UnityAction<TParam>) Declaration public static bool RegisterAction<TParam>(string name, UnityAction<TParam> callback) Parameters Type Name Description String name UnityAction <TParam> callback Returns Type Description Boolean Type Parameters Name Description TParam RegisterAction<TParam1, TParam2>(String, UnityAction<TParam1, TParam2>) Declaration public static bool RegisterAction<TParam1, TParam2>(string name, UnityAction<TParam1, TParam2> callback) Parameters Type Name Description String name UnityEngine.Events.UnityAction <TParam1, TParam2> callback Returns Type Description Boolean Type Parameters Name Description TParam1 TParam2"
  },
  "api/Global.FaceCamera.html": {
    "href": "api/Global.FaceCamera.html",
    "title": "Class FaceCamera | Tower Defense",
    "keywords": "Class FaceCamera Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour FaceCamera Namespace : Global Assembly : TowerDefense.dll Syntax public class FaceCamera : MonoBehaviour"
  },
  "api/Global.GameState.html": {
    "href": "api/Global.GameState.html",
    "title": "Class GameState | Tower Defense",
    "keywords": "Class GameState Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour GameState Namespace : Global Assembly : TowerDefense.dll Syntax public class GameState : MonoBehaviour Fields StartingCash Amount of cash that players will start with. Declaration public int StartingCash Field Value Type Description Int32"
  },
  "api/Global.GenericMap-1.html": {
    "href": "api/Global.GenericMap-1.html",
    "title": "Class GenericMap<TKey> | Tower Defense",
    "keywords": "Class GenericMap<TKey> A wrapper around dictionary to support generic values. Inheritance Object GenericMap<TKey> Namespace : Global Assembly : TowerDefense.dll Syntax public class GenericMap<TKey> Type Parameters Name Description TKey Type parameter for the keys in the map Methods Add<TValue>(TKey, TValue) Add a key-value pair to the map Declaration public void Add<TValue>(TKey key, TValue value) Parameters Type Name Description TKey key Key for this entry TValue value Value for this entry Type Parameters Name Description TValue Type parameter for value ContainsKey(TKey) Check if the map contains a value for the given key. Declaration public bool ContainsKey(TKey key) Parameters Type Name Description TKey key Key to be queried Returns Type Description Boolean True if the key exists GetValue<TValue>(TKey) An unsafe way to get the value.false Might return null. Declaration [Obsolete(\"Use TryGetValue instead.\")] public TValue GetValue<TValue>(TKey key) where TValue : class Parameters Type Name Description TKey key Returns Type Description TValue Type Parameters Name Description TValue Type parameter for the value. TryGetValue<TValue>(TKey, out TValue) Try to find the value corresponding to the given key. Declaration public bool TryGetValue<TValue>(TKey key, out TValue value) where TValue : class Parameters Type Name Description TKey key TValue value Returns Type Description Boolean True if a valid value was found Type Parameters Name Description TValue Type parameter for value. Fetched value will be cast to this type."
  },
  "api/Global.HealthBarUI.html": {
    "href": "api/Global.HealthBarUI.html",
    "title": "Class HealthBarUI | Tower Defense",
    "keywords": "Class HealthBarUI Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour HealthBarUI Namespace : Global Assembly : TowerDefense.dll Syntax public class HealthBarUI : MonoBehaviour Methods SetHealth(Single) Declaration public void SetHealth(float health) Parameters Type Name Description Single health"
  },
  "api/Global.html": {
    "href": "api/Global.html",
    "title": "Namespace Global | Tower Defense",
    "keywords": "Namespace Global Classes AbstractBattle Base class for combat related functionality. Enemies and towers should implement this class. This class works closely with the Detection component. AIController AIController class to control AI movement. Damageable Detection Component to detect enemies using sweeps of a \"detection cone\" DialogSystem Handles the apprearance and disappearance of the associated dialog box. EventRegistry A class to orchestrate all events FaceCamera GameState GenericMap<TKey> A wrapper around dictionary to support generic values. HealthBarUI InputSystem Manager class for handling mouse input. SerializableDictionary SerializableDictionary.Storage<T> SerializableDictionary<TKey, TValue> SerializableDictionary<TKey, TValue, TValueStorage> SerializableDictionaryBase<TKey, TValue, TValueStorage> SerializableDictionaryPropertyDrawer SerializableDictionaryStoragePropertyDrawer TDEvent An event that takes callbacks with no parameters TDEvent<TParam> An event that takes callbacks with one parameter TDEvent<TParam1, TParam2> An event that takes callbacks with two parameters TestCallback A class to test the event system.false Place callbacks here. TestEventCall A class to test the event system. Fire events here. TowerBattle Component to handle tower attacks TowerMenuUISystem Brings up the tower menu when a tower is selected. TowerPlacementSystem TowerPlacer Implements the tower placement location selector TowerType A component that can be attached to buttons to check what tower they are associated with in a safe way with an enum TowerTypeBoolDictionary TowerTypeBoolDictionaryPropertyDrawer UIManager Manager class that holds references to all UI layers and handles the UI stack. UpgradeMenuUISystem Manager class for tower upgrades. Handles UI and tower object instantiation/deletion. UpgradeTree This component stores information about possible upgrades in the upgrade tree. WalletUISystem Structs DialogConfig Configuration settings for a dialog. Interfaces IUISystem Exposes basic UI functionality. All MenuUISystems should implement this interface. Enums ETowerType Enum for tower types. This is important to refer to towers in a safe way."
  },
  "api/Global.InputSystem.html": {
    "href": "api/Global.InputSystem.html",
    "title": "Class InputSystem | Tower Defense",
    "keywords": "Class InputSystem Manager class for handling mouse input. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour InputSystem Namespace : Global Assembly : TowerDefense.dll Syntax public class InputSystem : MonoBehaviour Fields BaseTower Prefab that the tower placer will place by default Declaration public GameObject BaseTower Field Value Type Description UnityEngine.GameObject"
  },
  "api/Global.IUISystem.html": {
    "href": "api/Global.IUISystem.html",
    "title": "Interface IUISystem | Tower Defense",
    "keywords": "Interface IUISystem Exposes basic UI functionality. All MenuUISystems should implement this interface. Namespace : Global Assembly : TowerDefense.dll Syntax public interface IUISystem Methods Hide() Hides the UI screen. Declaration void Hide() Show(GameObject) Show the UI screen with values from the provided object. Declaration void Show(GameObject obj) Parameters Type Name Description UnityEngine.GameObject obj GameObject used to populate the layer"
  },
  "api/Global.SerializableDictionary.html": {
    "href": "api/Global.SerializableDictionary.html",
    "title": "Class SerializableDictionary | Tower Defense",
    "keywords": "Class SerializableDictionary Inheritance Object SerializableDictionary Namespace : Global Assembly : TowerDefense.dll Syntax public static class SerializableDictionary"
  },
  "api/Global.SerializableDictionary.Storage-1.html": {
    "href": "api/Global.SerializableDictionary.Storage-1.html",
    "title": "Class SerializableDictionary.Storage<T> | Tower Defense",
    "keywords": "Class SerializableDictionary.Storage<T> Inheritance Object SerializableDictionary.Storage<T> Namespace : Global Assembly : TowerDefense.dll Syntax public class Storage<T> Type Parameters Name Description T Fields data Declaration public T data Field Value Type Description T"
  },
  "api/Global.SerializableDictionary-2.html": {
    "href": "api/Global.SerializableDictionary-2.html",
    "title": "Class SerializableDictionary<TKey, TValue> | Tower Defense",
    "keywords": "Class SerializableDictionary<TKey, TValue> Inheritance Object Dictionary <TKey, TValue> SerializableDictionaryBase <TKey, TValue, TValue> SerializableDictionary<TKey, TValue> TowerTypeBoolDictionary Inherited Members SerializableDictionaryBase<TKey, TValue, TValue>.SetValue(TValue[], Int32, TValue) SerializableDictionaryBase<TKey, TValue, TValue>.GetValue(TValue[], Int32) SerializableDictionaryBase<TKey, TValue, TValue>.CopyFrom(IDictionary<TKey, TValue>) SerializableDictionaryBase<TKey, TValue, TValue>.OnAfterDeserialize() SerializableDictionaryBase<TKey, TValue, TValue>.OnBeforeSerialize() Namespace : Global Assembly : TowerDefense.dll Syntax public class SerializableDictionary<TKey, TValue> : SerializableDictionaryBase<TKey, TValue, TValue>, IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IReadOnlyDictionary<TKey, TValue>, IReadOnlyCollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable, ISerializationCallbackReceiver Type Parameters Name Description TKey TValue Constructors SerializableDictionary() Declaration public SerializableDictionary() SerializableDictionary(IDictionary<TKey, TValue>) Declaration public SerializableDictionary(IDictionary<TKey, TValue> dict) Parameters Type Name Description IDictionary <TKey, TValue> dict SerializableDictionary(SerializationInfo, StreamingContext) Declaration protected SerializableDictionary(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Methods GetValue(TValue[], Int32) Declaration protected override TValue GetValue(TValue[] storage, int i) Parameters Type Name Description TValue[] storage Int32 i Returns Type Description TValue Overrides SerializableDictionaryBase<TKey, TValue, TValue>.GetValue(TValue[], System.Int32) SetValue(TValue[], Int32, TValue) Declaration protected override void SetValue(TValue[] storage, int i, TValue value) Parameters Type Name Description TValue[] storage Int32 i TValue value Overrides SerializableDictionaryBase<TKey, TValue, TValue>.SetValue(TValue[], System.Int32, TValue)"
  },
  "api/Global.SerializableDictionary-3.html": {
    "href": "api/Global.SerializableDictionary-3.html",
    "title": "Class SerializableDictionary<TKey, TValue, TValueStorage> | Tower Defense",
    "keywords": "Class SerializableDictionary<TKey, TValue, TValueStorage> Inheritance Object Dictionary <TKey, TValue> SerializableDictionaryBase <TKey, TValue, TValueStorage> SerializableDictionary<TKey, TValue, TValueStorage> Inherited Members SerializableDictionaryBase<TKey, TValue, TValueStorage>.SetValue(TValueStorage[], Int32, TValue) SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetValue(TValueStorage[], Int32) SerializableDictionaryBase<TKey, TValue, TValueStorage>.CopyFrom(IDictionary<TKey, TValue>) SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnAfterDeserialize() SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnBeforeSerialize() Namespace : Global Assembly : TowerDefense.dll Syntax public class SerializableDictionary<TKey, TValue, TValueStorage> : SerializableDictionaryBase<TKey, TValue, TValueStorage>, IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IReadOnlyDictionary<TKey, TValue>, IReadOnlyCollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable, ISerializationCallbackReceiver where TValueStorage : SerializableDictionary.Storage<TValue>, new() Type Parameters Name Description TKey TValue TValueStorage Constructors SerializableDictionary() Declaration public SerializableDictionary() SerializableDictionary(IDictionary<TKey, TValue>) Declaration public SerializableDictionary(IDictionary<TKey, TValue> dict) Parameters Type Name Description IDictionary <TKey, TValue> dict SerializableDictionary(SerializationInfo, StreamingContext) Declaration protected SerializableDictionary(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Methods GetValue(TValueStorage[], Int32) Declaration protected override TValue GetValue(TValueStorage[] storage, int i) Parameters Type Name Description TValueStorage[] storage Int32 i Returns Type Description TValue Overrides SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetValue(TValueStorage[], System.Int32) SetValue(TValueStorage[], Int32, TValue) Declaration protected override void SetValue(TValueStorage[] storage, int i, TValue value) Parameters Type Name Description TValueStorage[] storage Int32 i TValue value Overrides SerializableDictionaryBase<TKey, TValue, TValueStorage>.SetValue(TValueStorage[], System.Int32, TValue)"
  },
  "api/Global.SerializableDictionaryBase-3.html": {
    "href": "api/Global.SerializableDictionaryBase-3.html",
    "title": "Class SerializableDictionaryBase<TKey, TValue, TValueStorage> | Tower Defense",
    "keywords": "Class SerializableDictionaryBase<TKey, TValue, TValueStorage> Inheritance Object Dictionary <TKey, TValue> SerializableDictionaryBase<TKey, TValue, TValueStorage> SerializableDictionary<TKey, TValue> SerializableDictionary<TKey, TValue, TValueStorage> Namespace : Global Assembly : TowerDefense.dll Syntax public abstract class SerializableDictionaryBase<TKey, TValue, TValueStorage> : Dictionary<TKey, TValue>, IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IReadOnlyDictionary<TKey, TValue>, IReadOnlyCollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable, ISerializationCallbackReceiver Type Parameters Name Description TKey TValue TValueStorage Constructors SerializableDictionaryBase() Declaration public SerializableDictionaryBase() SerializableDictionaryBase(IDictionary<TKey, TValue>) Declaration public SerializableDictionaryBase(IDictionary<TKey, TValue> dict) Parameters Type Name Description IDictionary <TKey, TValue> dict SerializableDictionaryBase(SerializationInfo, StreamingContext) Declaration protected SerializableDictionaryBase(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Methods CopyFrom(IDictionary<TKey, TValue>) Declaration public void CopyFrom(IDictionary<TKey, TValue> dict) Parameters Type Name Description IDictionary <TKey, TValue> dict GetValue(TValueStorage[], Int32) Declaration protected abstract TValue GetValue(TValueStorage[] storage, int i) Parameters Type Name Description TValueStorage[] storage Int32 i Returns Type Description TValue OnAfterDeserialize() Declaration public void OnAfterDeserialize() OnBeforeSerialize() Declaration public void OnBeforeSerialize() SetValue(TValueStorage[], Int32, TValue) Declaration protected abstract void SetValue(TValueStorage[] storage, int i, TValue value) Parameters Type Name Description TValueStorage[] storage Int32 i TValue value"
  },
  "api/Global.SerializableDictionaryPropertyDrawer.html": {
    "href": "api/Global.SerializableDictionaryPropertyDrawer.html",
    "title": "Class SerializableDictionaryPropertyDrawer | Tower Defense",
    "keywords": "Class SerializableDictionaryPropertyDrawer Inheritance Object UnityEditor.GUIDrawer UnityEditor.PropertyDrawer SerializableDictionaryPropertyDrawer TowerTypeBoolDictionaryPropertyDrawer Namespace : Global Assembly : TowerDefenseEditor.dll Syntax public class SerializableDictionaryPropertyDrawer : PropertyDrawer Fields IndentWidth Declaration protected const float IndentWidth = 15F Field Value Type Description Single Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description UnityEditor.SerializedProperty property UnityEngine.GUIContent label Returns Type Description Single Overrides UnityEditor.PropertyDrawer.GetPropertyHeight(UnityEditor.SerializedProperty, UnityEngine.GUIContent) GetPropertyValue(SerializedProperty) Declaration public static object GetPropertyValue(SerializedProperty p) Parameters Type Name Description UnityEditor.SerializedProperty p Returns Type Description Object OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description UnityEngine.Rect position UnityEditor.SerializedProperty property UnityEngine.GUIContent label Overrides UnityEditor.PropertyDrawer.OnGUI(UnityEngine.Rect, UnityEditor.SerializedProperty, UnityEngine.GUIContent)"
  },
  "api/Global.SerializableDictionaryStoragePropertyDrawer.html": {
    "href": "api/Global.SerializableDictionaryStoragePropertyDrawer.html",
    "title": "Class SerializableDictionaryStoragePropertyDrawer | Tower Defense",
    "keywords": "Class SerializableDictionaryStoragePropertyDrawer Inheritance Object UnityEditor.GUIDrawer UnityEditor.PropertyDrawer SerializableDictionaryStoragePropertyDrawer Namespace : Global Assembly : TowerDefenseEditor.dll Syntax public class SerializableDictionaryStoragePropertyDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description UnityEditor.SerializedProperty property UnityEngine.GUIContent label Returns Type Description Single Overrides UnityEditor.PropertyDrawer.GetPropertyHeight(UnityEditor.SerializedProperty, UnityEngine.GUIContent) OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description UnityEngine.Rect position UnityEditor.SerializedProperty property UnityEngine.GUIContent label Overrides UnityEditor.PropertyDrawer.OnGUI(UnityEngine.Rect, UnityEditor.SerializedProperty, UnityEngine.GUIContent)"
  },
  "api/Global.TDEvent.html": {
    "href": "api/Global.TDEvent.html",
    "title": "Class TDEvent | Tower Defense",
    "keywords": "Class TDEvent An event that takes callbacks with no parameters Inheritance Object UnityEngine.Events.UnityEventBase UnityEngine.Events.UnityEvent TDEvent Namespace : Global Assembly : TowerDefense.dll Syntax public class TDEvent : UnityEvent, ISerializationCallbackReceiver"
  },
  "api/Global.TDEvent-1.html": {
    "href": "api/Global.TDEvent-1.html",
    "title": "Class TDEvent<TParam> | Tower Defense",
    "keywords": "Class TDEvent<TParam> An event that takes callbacks with one parameter Inheritance Object UnityEngine.Events.UnityEventBase UnityEngine.Events.UnityEvent <TParam> TDEvent<TParam> Namespace : Global Assembly : TowerDefense.dll Syntax public class TDEvent<TParam> : UnityEvent<TParam>, ISerializationCallbackReceiver Type Parameters Name Description TParam Type of the parameter"
  },
  "api/Global.TDEvent-2.html": {
    "href": "api/Global.TDEvent-2.html",
    "title": "Class TDEvent<TParam1, TParam2> | Tower Defense",
    "keywords": "Class TDEvent<TParam1, TParam2> An event that takes callbacks with two parameters Inheritance Object UnityEngine.Events.UnityEventBase UnityEngine.Events.UnityEvent <TParam1, TParam2> TDEvent<TParam1, TParam2> Namespace : Global Assembly : TowerDefense.dll Syntax public class TDEvent<TParam1, TParam2> : UnityEvent<TParam1, TParam2>, ISerializationCallbackReceiver Type Parameters Name Description TParam1 Type of the first parameter TParam2 Type of the second parameter"
  },
  "api/Global.TestCallback.html": {
    "href": "api/Global.TestCallback.html",
    "title": "Class TestCallback | Tower Defense",
    "keywords": "Class TestCallback A class to test the event system.false Place callbacks here. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour TestCallback Namespace : Global Assembly : TowerDefense.dll Syntax public class TestCallback : MonoBehaviour"
  },
  "api/Global.TestEventCall.html": {
    "href": "api/Global.TestEventCall.html",
    "title": "Class TestEventCall | Tower Defense",
    "keywords": "Class TestEventCall A class to test the event system. Fire events here. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour TestEventCall Namespace : Global Assembly : TowerDefense.dll Syntax public class TestEventCall : MonoBehaviour"
  },
  "api/Global.TowerBattle.html": {
    "href": "api/Global.TowerBattle.html",
    "title": "Class TowerBattle | Tower Defense",
    "keywords": "Class TowerBattle Component to handle tower attacks Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour AbstractBattle TowerBattle Inherited Members AbstractBattle.Attack AbstractBattle.Defense AbstractBattle.Range AbstractBattle.FireRate Namespace : Global Assembly : TowerDefense.dll Syntax public class TowerBattle : AbstractBattle Methods OnDetect(GameObject) Declaration public override void OnDetect(GameObject enemy) Parameters Type Name Description UnityEngine.GameObject enemy Overrides AbstractBattle.OnDetect(GameObject) OnLose() Declaration public override void OnLose() Overrides AbstractBattle.OnLose() SetRange() Declaration protected override void SetRange() Overrides AbstractBattle.SetRange()"
  },
  "api/Global.TowerMenuUISystem.html": {
    "href": "api/Global.TowerMenuUISystem.html",
    "title": "Class TowerMenuUISystem | Tower Defense",
    "keywords": "Class TowerMenuUISystem Brings up the tower menu when a tower is selected. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour TowerMenuUISystem Implements IUISystem Namespace : Global Assembly : TowerDefense.dll Syntax public class TowerMenuUISystem : MonoBehaviour, IUISystem Methods Hide() Declaration public void Hide() OnMoveClick() Callback for the Move button Declaration public void OnMoveClick() OnUpgradeClick() Callback for the upgrade button. Declaration public void OnUpgradeClick() Show(GameObject) Declaration public void Show(GameObject tower) Parameters Type Name Description UnityEngine.GameObject tower Implements IUISystem"
  },
  "api/Global.TowerPlacementSystem.html": {
    "href": "api/Global.TowerPlacementSystem.html",
    "title": "Class TowerPlacementSystem | Tower Defense",
    "keywords": "Class TowerPlacementSystem Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour TowerPlacementSystem Namespace : Global Assembly : TowerDefense.dll Syntax public class TowerPlacementSystem : MonoBehaviour Fields SelectorPrefab Declaration public GameObject SelectorPrefab Field Value Type Description UnityEngine.GameObject Methods TogglePlacer(GameObject, Vector3) Declaration public void TogglePlacer(GameObject targetTower, Vector3 location) Parameters Type Name Description UnityEngine.GameObject targetTower UnityEngine.Vector3 location"
  },
  "api/Global.TowerPlacer.html": {
    "href": "api/Global.TowerPlacer.html",
    "title": "Class TowerPlacer | Tower Defense",
    "keywords": "Class TowerPlacer Implements the tower placement location selector Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour TowerPlacer Namespace : Global Assembly : TowerDefense.dll Syntax public class TowerPlacer : MonoBehaviour Fields TowerObject A reference to the tower prefab that is to be placed Declaration public GameObject TowerObject Field Value Type Description UnityEngine.GameObject Methods PlaceTower() Declaration public bool PlaceTower() Returns Type Description Boolean SetTower(GameObject) Declaration public void SetTower(GameObject reference) Parameters Type Name Description UnityEngine.GameObject reference"
  },
  "api/Global.TowerType.html": {
    "href": "api/Global.TowerType.html",
    "title": "Class TowerType | Tower Defense",
    "keywords": "Class TowerType A component that can be attached to buttons to check what tower they are associated with in a safe way with an enum Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour TowerType Namespace : Global Assembly : TowerDefense.dll Syntax public class TowerType : MonoBehaviour Fields Type Declaration public ETowerType Type Field Value Type Description ETowerType"
  },
  "api/Global.TowerTypeBoolDictionary.html": {
    "href": "api/Global.TowerTypeBoolDictionary.html",
    "title": "Class TowerTypeBoolDictionary | Tower Defense",
    "keywords": "Class TowerTypeBoolDictionary Inheritance Object Dictionary < ETowerType , Boolean > SerializableDictionaryBase < ETowerType , Boolean , Boolean > SerializableDictionary < ETowerType , Boolean > TowerTypeBoolDictionary Inherited Members SerializableDictionary<ETowerType, Boolean>.GetValue(Boolean[], Int32) SerializableDictionary<ETowerType, Boolean>.SetValue(Boolean[], Int32, Boolean) SerializableDictionaryBase<ETowerType, Boolean, Boolean>.SetValue(Boolean[], Int32, Boolean) SerializableDictionaryBase<ETowerType, Boolean, Boolean>.GetValue(Boolean[], Int32) SerializableDictionaryBase<ETowerType, Boolean, Boolean>.CopyFrom(IDictionary<ETowerType, Boolean>) SerializableDictionaryBase<ETowerType, Boolean, Boolean>.OnAfterDeserialize() SerializableDictionaryBase<ETowerType, Boolean, Boolean>.OnBeforeSerialize() Namespace : Global Assembly : TowerDefense.dll Syntax [Serializable] public class TowerTypeBoolDictionary : SerializableDictionary<ETowerType, bool>, IDictionary<ETowerType, bool>, ICollection<KeyValuePair<ETowerType, bool>>, IReadOnlyDictionary<ETowerType, bool>, IReadOnlyCollection<KeyValuePair<ETowerType, bool>>, IEnumerable<KeyValuePair<ETowerType, bool>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable, ISerializationCallbackReceiver"
  },
  "api/Global.TowerTypeBoolDictionaryPropertyDrawer.html": {
    "href": "api/Global.TowerTypeBoolDictionaryPropertyDrawer.html",
    "title": "Class TowerTypeBoolDictionaryPropertyDrawer | Tower Defense",
    "keywords": "Class TowerTypeBoolDictionaryPropertyDrawer Inheritance Object UnityEditor.GUIDrawer UnityEditor.PropertyDrawer SerializableDictionaryPropertyDrawer TowerTypeBoolDictionaryPropertyDrawer Inherited Members SerializableDictionaryPropertyDrawer.IndentWidth SerializableDictionaryPropertyDrawer.OnGUI(Rect, SerializedProperty, GUIContent) SerializableDictionaryPropertyDrawer.GetPropertyHeight(SerializedProperty, GUIContent) SerializableDictionaryPropertyDrawer.GetPropertyValue(SerializedProperty) Namespace : Global Assembly : TowerDefenseEditor.dll Syntax [CustomPropertyDrawer(typeof(TowerTypeBoolDictionary))] public class TowerTypeBoolDictionaryPropertyDrawer : SerializableDictionaryPropertyDrawer"
  },
  "api/Global.UIManager.html": {
    "href": "api/Global.UIManager.html",
    "title": "Class UIManager | Tower Defense",
    "keywords": "Class UIManager Manager class that holds references to all UI layers and handles the UI stack. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour UIManager Namespace : Global Assembly : TowerDefense.dll Syntax public class UIManager : MonoBehaviour Methods HideMenu() Declaration public void HideMenu() ShowMenu(GameObject, Type) Declaration public void ShowMenu(GameObject tower, Type type) Parameters Type Name Description UnityEngine.GameObject tower Type type"
  },
  "api/Global.UpgradeMenuUISystem.html": {
    "href": "api/Global.UpgradeMenuUISystem.html",
    "title": "Class UpgradeMenuUISystem | Tower Defense",
    "keywords": "Class UpgradeMenuUISystem Manager class for tower upgrades. Handles UI and tower object instantiation/deletion. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour UpgradeMenuUISystem Implements IUISystem Namespace : Global Assembly : TowerDefense.dll Syntax public class UpgradeMenuUISystem : MonoBehaviour, IUISystem Methods CancelTowerCreation() Callback for \"cancelTowerCreation\" event. Called when upgrade confirmation dialog is closed. Declaration public void CancelTowerCreation() CreateTower(ETowerType) Callback for the \"createTower\" event. Called when the upgrade is confirmed through the dialog box. Declaration public void CreateTower(ETowerType type) Parameters Type Name Description ETowerType type Type of the tower to create Hide() Declaration public void Hide() OnClick(String) Callback for the Upgrade UI. String indicating the type of tower upgrade requested. Declaration public void OnClick(string type) Parameters Type Name Description String type Show(GameObject) Declaration public void Show(GameObject tower) Parameters Type Name Description UnityEngine.GameObject tower Implements IUISystem"
  },
  "api/Global.UpgradeTree.html": {
    "href": "api/Global.UpgradeTree.html",
    "title": "Class UpgradeTree | Tower Defense",
    "keywords": "Class UpgradeTree This component stores information about possible upgrades in the upgrade tree. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour UpgradeTree Namespace : Global Assembly : TowerDefense.dll Syntax public class UpgradeTree : MonoBehaviour Fields valuePairs Declaration public TowerTypeBoolDictionary valuePairs Field Value Type Description TowerTypeBoolDictionary"
  },
  "api/Global.WalletUISystem.html": {
    "href": "api/Global.WalletUISystem.html",
    "title": "Class WalletUISystem | Tower Defense",
    "keywords": "Class WalletUISystem Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour WalletUISystem Namespace : Global Assembly : TowerDefense.dll Syntax public class WalletUISystem : MonoBehaviour Methods OnCancelClick() Passed as a callback for the Cancel button on the upgrade dialog. Declaration public void OnCancelClick() OnOKClick() Passed an a callback for the OK button on the upgrade dialog. Declaration public void OnOKClick() ShowUpgradeDialog(ETowerType) Callback for \"showUpgradeDialog\" event. Generates content for the upgrade confirmation dialog and enables it. Declaration public void ShowUpgradeDialog(ETowerType type) Parameters Type Name Description ETowerType type"
  },
  "api/Tests.BattleTests.html": {
    "href": "api/Tests.BattleTests.html",
    "title": "Class BattleTests | Tower Defense",
    "keywords": "Class BattleTests Inheritance Object BattleTests Namespace : Tests Assembly : RuntimeTests.dll Syntax public class BattleTests Methods SetUp() Declaration [SetUp] public void SetUp() TowersDetecEnemies() Declaration [UnityTest] public IEnumerator TowersDetecEnemies() Returns Type Description IEnumerator"
  },
  "api/Tests.DamageableTests.html": {
    "href": "api/Tests.DamageableTests.html",
    "title": "Class DamageableTests | Tower Defense",
    "keywords": "Class DamageableTests Inheritance Object DamageableTests Namespace : Tests Assembly : RuntimeTests.dll Syntax public class DamageableTests Methods DamageTowers() Declaration [UnityTest] public IEnumerator DamageTowers() Returns Type Description IEnumerator SetUp() Declaration [SetUp] public void SetUp()"
  },
  "api/Tests.DetectionTests.html": {
    "href": "api/Tests.DetectionTests.html",
    "title": "Class DetectionTests | Tower Defense",
    "keywords": "Class DetectionTests Inheritance Object DetectionTests Namespace : Tests Assembly : RuntimeTests.dll Syntax public class DetectionTests Methods SetUp() Declaration [SetUp] public void SetUp() TowersDetecEnemies() Declaration [UnityTest] public IEnumerator TowersDetecEnemies() Returns Type Description IEnumerator"
  },
  "api/Tests.EditModeSampleTest.html": {
    "href": "api/Tests.EditModeSampleTest.html",
    "title": "Class EditModeSampleTest | Tower Defense",
    "keywords": "Class EditModeSampleTest Sample editor tests Inheritance Object EditModeSampleTest Namespace : Tests Assembly : EditorTests.dll Syntax public class EditModeSampleTest Methods EditModeSampleTestSimplePasses() Declaration [Test] public void EditModeSampleTestSimplePasses() EditModeSampleTestWithEnumeratorPasses() Declaration [UnityTest] public IEnumerator EditModeSampleTestWithEnumeratorPasses() Returns Type Description IEnumerator"
  },
  "api/Tests.html": {
    "href": "api/Tests.html",
    "title": "Namespace Tests | Tower Defense",
    "keywords": "Namespace Tests Classes BattleTests DamageableTests DetectionTests EditModeSampleTest Sample editor tests MovementTests Tests for player movement systems TowerPlacerTests Tests for tower placement indicator TowerUIMenuTests Tests for the tower menu UI functions UpgradeUIMenuTests Tests for the UpgradeMenuUISystem"
  },
  "api/Tests.MovementTests.html": {
    "href": "api/Tests.MovementTests.html",
    "title": "Class MovementTests | Tower Defense",
    "keywords": "Class MovementTests Tests for player movement systems Inheritance Object MovementTests Namespace : Tests Assembly : RuntimeTests.dll Syntax public class MovementTests Methods AIMovePlayer() Tests if the player can move Declaration [UnityTest] public IEnumerator AIMovePlayer() Returns Type Description IEnumerator Setup() Declaration [SetUp] public void Setup() tocheckifplayerismoving() checking calculations of aimovement Declaration [UnityTest] public IEnumerator tocheckifplayerismoving() Returns Type Description IEnumerator"
  },
  "api/Tests.TowerPlacerTests.html": {
    "href": "api/Tests.TowerPlacerTests.html",
    "title": "Class TowerPlacerTests | Tower Defense",
    "keywords": "Class TowerPlacerTests Tests for tower placement indicator Inheritance Object TowerPlacerTests Namespace : Tests Assembly : RuntimeTests.dll Syntax public class TowerPlacerTests Methods IndicatorCanToggle() Tests if the placement indicator can be toggled Declaration [UnityTest] public IEnumerator IndicatorCanToggle() Returns Type Description IEnumerator IndicatorColorIsRedNearObstacles() Tests if the placement indicator turns red near an object Declaration [UnityTest] public IEnumerator IndicatorColorIsRedNearObstacles() Returns Type Description IEnumerator IndicatorMovesWithCursor() Tests if the placement indicator moves if cursor moves Declaration [UnityTest] public IEnumerator IndicatorMovesWithCursor() Returns Type Description IEnumerator IndicatorPlacesTower() Tests if a tower can be placed through TowerPlacer Declaration [UnityTest] public IEnumerator IndicatorPlacesTower() Returns Type Description IEnumerator Setup() Declaration [SetUp] public void Setup()"
  },
  "api/Tests.TowerUIMenuTests.html": {
    "href": "api/Tests.TowerUIMenuTests.html",
    "title": "Class TowerUIMenuTests | Tower Defense",
    "keywords": "Class TowerUIMenuTests Tests for the tower menu UI functions Inheritance Object TowerUIMenuTests Namespace : Tests Assembly : RuntimeTests.dll Syntax public class TowerUIMenuTests Methods ClickingOnTowerBringsUpUI() Declaration [UnityTest] public IEnumerator ClickingOnTowerBringsUpUI() Returns Type Description IEnumerator CreateNewTowerMenuUI() Declaration [UnityTest] public IEnumerator CreateNewTowerMenuUI() Returns Type Description IEnumerator EscapeKeyMakesUIGoAway() Declaration [UnityTest] public IEnumerator EscapeKeyMakesUIGoAway() Returns Type Description IEnumerator Setup() Declaration [SetUp] public void Setup() StartTowerMoveFromTowerUI() Declaration [UnityTest] public IEnumerator StartTowerMoveFromTowerUI() Returns Type Description IEnumerator StartTowerUpgradeFromTowerMenuUI() Declaration [UnityTest] public IEnumerator StartTowerUpgradeFromTowerMenuUI() Returns Type Description IEnumerator"
  },
  "api/Tests.UpgradeUIMenuTests.html": {
    "href": "api/Tests.UpgradeUIMenuTests.html",
    "title": "Class UpgradeUIMenuTests | Tower Defense",
    "keywords": "Class UpgradeUIMenuTests Tests for the UpgradeMenuUISystem Inheritance Object UpgradeUIMenuTests Namespace : Tests Assembly : RuntimeTests.dll Syntax public class UpgradeUIMenuTests Methods CanCreateUpgradeUIMenu() Declaration [UnityTest] public IEnumerator CanCreateUpgradeUIMenu() Returns Type Description IEnumerator CanUpgradeToRedTower() Declaration [UnityTest] public IEnumerator CanUpgradeToRedTower() Returns Type Description IEnumerator EscapeKeyMakesUIGoAway() Declaration [UnityTest] public IEnumerator EscapeKeyMakesUIGoAway() Returns Type Description IEnumerator Setup() Declaration [SetUp] public void Setup()"
  },
  "index.html": {
    "href": "index.html",
    "title": "Home Page | Tower Defense",
    "keywords": "Home Page Documentation auto-generated by DocFX. The manual is incomplete."
  },
  "manual/Events.html": {
    "href": "manual/Events.html",
    "title": "Tower Defense Event System | Tower Defense",
    "keywords": "Tower Defense Event System"
  },
  "manual/SerializableDictionary.html": {
    "href": "manual/SerializableDictionary.html",
    "title": "Usage Guide for the Serializable Dictionary | Tower Defense",
    "keywords": "Usage Guide for the Serializable Dictionary We've used azixMcAze's implementation: https://github.com/azixMcAze/Unity-SerializableDictionary Instructions Subclass SerializableDictionary . Generic classes won't be serialized. cs [System.Serializable] public class StringStringDictionary : SerializableDictionary<string, string> { } Subclass SerializableDictionaryPropertyDrawer in the Editor folder. Add the CustomPropertyDrawer attribute. cs [UnityEditor.CustomPropertyDrawer(typeof(StringStringDictionary))] public class StringStringPropertyDrawer : SerializableDictionaryPropertyDrawer { }"
  }
}