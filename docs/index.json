{
  "api/Global.AIController.html": {
    "href": "api/Global.AIController.html",
    "title": "Class AIController | Tower Defense",
    "keywords": "Class AIController AIController class to control AI movement. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour AIController Namespace : Global Assembly : TowerDefense.dll Syntax public class AIController : MonoBehaviour Methods MoveTo(Vector3) Moves the AI object to the given point. Declaration public void MoveTo(Vector3 dest) Parameters Type Name Description UnityEngine.Vector3 dest Vector3 for the destination point"
  },
  "api/Global.EventRegistry.html": {
    "href": "api/Global.EventRegistry.html",
    "title": "Class EventRegistry | Tower Defense",
    "keywords": "Class EventRegistry A class to orchestrate all events Inheritance Object EventRegistry Namespace : Global Assembly : TowerDefense.dll Syntax public static class EventRegistry Methods GetEvent(String) Gets you the event associated with the key. Creates one if no event found. Declaration public static TDEvent GetEvent(string name) Parameters Type Name Description String name Key for event lookup Returns Type Description TDEvent TDEvent corresponding to the string GetEvent<TParam1, TParam2>(String) Declaration public static TDEvent<TParam1, TParam2> GetEvent<TParam1, TParam2>(string name) Parameters Type Name Description String name Returns Type Description TDEvent <TParam1, TParam2> Type Parameters Name Description TParam1 TParam2 Invoke<TParam1, TParam2>(String, TParam1, TParam2) Declaration public static void Invoke<TParam1, TParam2>(string name, TParam1 param1, TParam2 param2) Parameters Type Name Description String name TParam1 param1 TParam2 param2 Type Parameters Name Description TParam1 TParam2 RegisterAction(String, UnityAction) Registers a zero argument callback for an event. Creates the event if it doesn't exist. Declaration public static bool RegisterAction(string name, UnityAction callback) Parameters Type Name Description String name Name of the event UnityEngine.Events.UnityAction callback Callback to register Returns Type Description Boolean True if successfully registered RegisterAction<TParam1, TParam2>(String, UnityAction<TParam1, TParam2>) Declaration public static bool RegisterAction<TParam1, TParam2>(string name, UnityAction<TParam1, TParam2> callback) Parameters Type Name Description String name UnityEngine.Events.UnityAction <TParam1, TParam2> callback Returns Type Description Boolean Type Parameters Name Description TParam1 TParam2"
  },
  "api/Global.GenericMap-1.html": {
    "href": "api/Global.GenericMap-1.html",
    "title": "Class GenericMap<TKey> | Tower Defense",
    "keywords": "Class GenericMap<TKey> A wrapper around dictionary to support generic values. Inheritance Object GenericMap<TKey> Namespace : Global Assembly : TowerDefense.dll Syntax public class GenericMap<TKey> Type Parameters Name Description TKey Type parameter for the keys in the map Methods Add<TValue>(TKey, TValue) Add a key-value pair to the map Declaration public void Add<TValue>(TKey key, TValue value) Parameters Type Name Description TKey key Key for this entry TValue value Value for this entry Type Parameters Name Description TValue Type parameter for value ContainsKey(TKey) Check if the map contains a value for the given key. Declaration public bool ContainsKey(TKey key) Parameters Type Name Description TKey key Key to be queried Returns Type Description Boolean True if the key exists GetValue<TValue>(TKey) An unsafe way to get the value.false Might return null. Declaration [Obsolete(\"Use TryGetValue instead.\")] public TValue GetValue<TValue>(TKey key) where TValue : class Parameters Type Name Description TKey key Returns Type Description TValue Type Parameters Name Description TValue Type parameter for the value. TryGetValue<TValue>(TKey, out TValue) Try to find the value corresponding to the given key. Declaration public bool TryGetValue<TValue>(TKey key, out TValue value) where TValue : class Parameters Type Name Description TKey key TValue value Returns Type Description Boolean True if a valid value was found Type Parameters Name Description TValue Type parameter for value. Fetched value will be cast to this type."
  },
  "api/Global.html": {
    "href": "api/Global.html",
    "title": "Namespace Global | Tower Defense",
    "keywords": "Namespace Global Classes AIController AIController class to control AI movement. EventRegistry A class to orchestrate all events GenericMap<TKey> A wrapper around dictionary to support generic values. InputSystem Manager class for handling mouse input. SerializableDictionary SerializableDictionary.Storage<T> SerializableDictionary<TKey, TValue> SerializableDictionary<TKey, TValue, TValueStorage> SerializableDictionaryBase<TKey, TValue, TValueStorage> SerializableDictionaryPropertyDrawer SerializableDictionaryStoragePropertyDrawer TDEvent An event that takes callbacks with no parameters TDEvent<TParam> An event that takes callbacks with one parameter TDEvent<TParam1, TParam2> An event that takes callbacks with two parameters TestCallback A class to test the event system.false Place callbacks here. TestEventCall A class to test the event system. Fire events here. TowerMenuUISystem Brings up the tower menu when a tower is selected. TowerPlacementSystem TowerPlacer Implements the tower placement location selector UIManager Manager class that holds references to all UI layers and handles the UI stack. UpgradeMenuUISystem Manager class for tower upgrades. Handles UI and tower object instantiation/deletion. UpgradeTree This component stores information about possible upgrades in the upgrade tree. Interfaces IUISystem Exposes basic UI functionality. All MenuUISystems should implement this interface."
  },
  "api/Global.InputSystem.html": {
    "href": "api/Global.InputSystem.html",
    "title": "Class InputSystem | Tower Defense",
    "keywords": "Class InputSystem Manager class for handling mouse input. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour InputSystem Namespace : Global Assembly : TowerDefense.dll Syntax public class InputSystem : MonoBehaviour Fields BaseTower Declaration public GameObject BaseTower Field Value Type Description UnityEngine.GameObject"
  },
  "api/Global.IUISystem.html": {
    "href": "api/Global.IUISystem.html",
    "title": "Interface IUISystem | Tower Defense",
    "keywords": "Interface IUISystem Exposes basic UI functionality. All MenuUISystems should implement this interface. Namespace : Global Assembly : TowerDefense.dll Syntax public interface IUISystem Methods Create(GameObject) \"Create\" a new UI screen, i.e. repopulate the canvas layer with details from the given object. Declaration bool Create(GameObject obj) Parameters Type Name Description UnityEngine.GameObject obj GameObject used to populate the layer Returns Type Description Boolean Boolean. True if repopulated. Destroy() Hides and resets the focused item for the associated UI. Declaration void Destroy() Hide() Hides the canvas layer using its alpha value. Declaration void Hide()"
  },
  "api/Global.SerializableDictionary.html": {
    "href": "api/Global.SerializableDictionary.html",
    "title": "Class SerializableDictionary | Tower Defense",
    "keywords": "Class SerializableDictionary Inheritance Object SerializableDictionary Namespace : Global Assembly : TowerDefense.dll Syntax public static class SerializableDictionary"
  },
  "api/Global.SerializableDictionary.Storage-1.html": {
    "href": "api/Global.SerializableDictionary.Storage-1.html",
    "title": "Class SerializableDictionary.Storage<T> | Tower Defense",
    "keywords": "Class SerializableDictionary.Storage<T> Inheritance Object SerializableDictionary.Storage<T> Namespace : Global Assembly : TowerDefense.dll Syntax public class Storage<T> Type Parameters Name Description T Fields data Declaration public T data Field Value Type Description T"
  },
  "api/Global.SerializableDictionary-2.html": {
    "href": "api/Global.SerializableDictionary-2.html",
    "title": "Class SerializableDictionary<TKey, TValue> | Tower Defense",
    "keywords": "Class SerializableDictionary<TKey, TValue> Inheritance Object Dictionary <TKey, TValue> SerializableDictionaryBase <TKey, TValue, TValue> SerializableDictionary<TKey, TValue> Inherited Members SerializableDictionaryBase<TKey, TValue, TValue>.SetValue(TValue[], Int32, TValue) SerializableDictionaryBase<TKey, TValue, TValue>.GetValue(TValue[], Int32) SerializableDictionaryBase<TKey, TValue, TValue>.CopyFrom(IDictionary<TKey, TValue>) SerializableDictionaryBase<TKey, TValue, TValue>.OnAfterDeserialize() SerializableDictionaryBase<TKey, TValue, TValue>.OnBeforeSerialize() Namespace : Global Assembly : TowerDefense.dll Syntax public class SerializableDictionary<TKey, TValue> : SerializableDictionaryBase<TKey, TValue, TValue>, IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IReadOnlyDictionary<TKey, TValue>, IReadOnlyCollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable, ISerializationCallbackReceiver Type Parameters Name Description TKey TValue Constructors SerializableDictionary() Declaration public SerializableDictionary() SerializableDictionary(IDictionary<TKey, TValue>) Declaration public SerializableDictionary(IDictionary<TKey, TValue> dict) Parameters Type Name Description IDictionary <TKey, TValue> dict SerializableDictionary(SerializationInfo, StreamingContext) Declaration protected SerializableDictionary(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Methods GetValue(TValue[], Int32) Declaration protected override TValue GetValue(TValue[] storage, int i) Parameters Type Name Description TValue[] storage Int32 i Returns Type Description TValue Overrides SerializableDictionaryBase<TKey, TValue, TValue>.GetValue(TValue[], System.Int32) SetValue(TValue[], Int32, TValue) Declaration protected override void SetValue(TValue[] storage, int i, TValue value) Parameters Type Name Description TValue[] storage Int32 i TValue value Overrides SerializableDictionaryBase<TKey, TValue, TValue>.SetValue(TValue[], System.Int32, TValue)"
  },
  "api/Global.SerializableDictionary-3.html": {
    "href": "api/Global.SerializableDictionary-3.html",
    "title": "Class SerializableDictionary<TKey, TValue, TValueStorage> | Tower Defense",
    "keywords": "Class SerializableDictionary<TKey, TValue, TValueStorage> Inheritance Object Dictionary <TKey, TValue> SerializableDictionaryBase <TKey, TValue, TValueStorage> SerializableDictionary<TKey, TValue, TValueStorage> Inherited Members SerializableDictionaryBase<TKey, TValue, TValueStorage>.SetValue(TValueStorage[], Int32, TValue) SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetValue(TValueStorage[], Int32) SerializableDictionaryBase<TKey, TValue, TValueStorage>.CopyFrom(IDictionary<TKey, TValue>) SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnAfterDeserialize() SerializableDictionaryBase<TKey, TValue, TValueStorage>.OnBeforeSerialize() Namespace : Global Assembly : TowerDefense.dll Syntax public class SerializableDictionary<TKey, TValue, TValueStorage> : SerializableDictionaryBase<TKey, TValue, TValueStorage>, IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IReadOnlyDictionary<TKey, TValue>, IReadOnlyCollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable, ISerializationCallbackReceiver where TValueStorage : SerializableDictionary.Storage<TValue>, new() Type Parameters Name Description TKey TValue TValueStorage Constructors SerializableDictionary() Declaration public SerializableDictionary() SerializableDictionary(IDictionary<TKey, TValue>) Declaration public SerializableDictionary(IDictionary<TKey, TValue> dict) Parameters Type Name Description IDictionary <TKey, TValue> dict SerializableDictionary(SerializationInfo, StreamingContext) Declaration protected SerializableDictionary(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Methods GetValue(TValueStorage[], Int32) Declaration protected override TValue GetValue(TValueStorage[] storage, int i) Parameters Type Name Description TValueStorage[] storage Int32 i Returns Type Description TValue Overrides SerializableDictionaryBase<TKey, TValue, TValueStorage>.GetValue(TValueStorage[], System.Int32) SetValue(TValueStorage[], Int32, TValue) Declaration protected override void SetValue(TValueStorage[] storage, int i, TValue value) Parameters Type Name Description TValueStorage[] storage Int32 i TValue value Overrides SerializableDictionaryBase<TKey, TValue, TValueStorage>.SetValue(TValueStorage[], System.Int32, TValue)"
  },
  "api/Global.SerializableDictionaryBase-3.html": {
    "href": "api/Global.SerializableDictionaryBase-3.html",
    "title": "Class SerializableDictionaryBase<TKey, TValue, TValueStorage> | Tower Defense",
    "keywords": "Class SerializableDictionaryBase<TKey, TValue, TValueStorage> Inheritance Object Dictionary <TKey, TValue> SerializableDictionaryBase<TKey, TValue, TValueStorage> SerializableDictionary<TKey, TValue> SerializableDictionary<TKey, TValue, TValueStorage> Namespace : Global Assembly : TowerDefense.dll Syntax public abstract class SerializableDictionaryBase<TKey, TValue, TValueStorage> : Dictionary<TKey, TValue>, IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IReadOnlyDictionary<TKey, TValue>, IReadOnlyCollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable, ISerializationCallbackReceiver Type Parameters Name Description TKey TValue TValueStorage Constructors SerializableDictionaryBase() Declaration public SerializableDictionaryBase() SerializableDictionaryBase(IDictionary<TKey, TValue>) Declaration public SerializableDictionaryBase(IDictionary<TKey, TValue> dict) Parameters Type Name Description IDictionary <TKey, TValue> dict SerializableDictionaryBase(SerializationInfo, StreamingContext) Declaration protected SerializableDictionaryBase(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Methods CopyFrom(IDictionary<TKey, TValue>) Declaration public void CopyFrom(IDictionary<TKey, TValue> dict) Parameters Type Name Description IDictionary <TKey, TValue> dict GetValue(TValueStorage[], Int32) Declaration protected abstract TValue GetValue(TValueStorage[] storage, int i) Parameters Type Name Description TValueStorage[] storage Int32 i Returns Type Description TValue OnAfterDeserialize() Declaration public void OnAfterDeserialize() OnBeforeSerialize() Declaration public void OnBeforeSerialize() SetValue(TValueStorage[], Int32, TValue) Declaration protected abstract void SetValue(TValueStorage[] storage, int i, TValue value) Parameters Type Name Description TValueStorage[] storage Int32 i TValue value"
  },
  "api/Global.SerializableDictionaryPropertyDrawer.html": {
    "href": "api/Global.SerializableDictionaryPropertyDrawer.html",
    "title": "Class SerializableDictionaryPropertyDrawer | Tower Defense",
    "keywords": "Class SerializableDictionaryPropertyDrawer Inheritance Object UnityEditor.GUIDrawer UnityEditor.PropertyDrawer SerializableDictionaryPropertyDrawer Namespace : Global Assembly : TowerDefenseEditor.dll Syntax public class SerializableDictionaryPropertyDrawer : PropertyDrawer Fields IndentWidth Declaration protected const float IndentWidth = 15F Field Value Type Description Single Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description UnityEditor.SerializedProperty property UnityEngine.GUIContent label Returns Type Description Single Overrides UnityEditor.PropertyDrawer.GetPropertyHeight(UnityEditor.SerializedProperty, UnityEngine.GUIContent) GetPropertyValue(SerializedProperty) Declaration public static object GetPropertyValue(SerializedProperty p) Parameters Type Name Description UnityEditor.SerializedProperty p Returns Type Description Object OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description UnityEngine.Rect position UnityEditor.SerializedProperty property UnityEngine.GUIContent label Overrides UnityEditor.PropertyDrawer.OnGUI(UnityEngine.Rect, UnityEditor.SerializedProperty, UnityEngine.GUIContent)"
  },
  "api/Global.SerializableDictionaryStoragePropertyDrawer.html": {
    "href": "api/Global.SerializableDictionaryStoragePropertyDrawer.html",
    "title": "Class SerializableDictionaryStoragePropertyDrawer | Tower Defense",
    "keywords": "Class SerializableDictionaryStoragePropertyDrawer Inheritance Object UnityEditor.GUIDrawer UnityEditor.PropertyDrawer SerializableDictionaryStoragePropertyDrawer Namespace : Global Assembly : TowerDefenseEditor.dll Syntax public class SerializableDictionaryStoragePropertyDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description UnityEditor.SerializedProperty property UnityEngine.GUIContent label Returns Type Description Single Overrides UnityEditor.PropertyDrawer.GetPropertyHeight(UnityEditor.SerializedProperty, UnityEngine.GUIContent) OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description UnityEngine.Rect position UnityEditor.SerializedProperty property UnityEngine.GUIContent label Overrides UnityEditor.PropertyDrawer.OnGUI(UnityEngine.Rect, UnityEditor.SerializedProperty, UnityEngine.GUIContent)"
  },
  "api/Global.TDEvent.html": {
    "href": "api/Global.TDEvent.html",
    "title": "Class TDEvent | Tower Defense",
    "keywords": "Class TDEvent An event that takes callbacks with no parameters Inheritance Object UnityEngine.Events.UnityEventBase UnityEngine.Events.UnityEvent TDEvent Namespace : Global Assembly : TowerDefense.dll Syntax public class TDEvent : UnityEvent, ISerializationCallbackReceiver"
  },
  "api/Global.TDEvent-1.html": {
    "href": "api/Global.TDEvent-1.html",
    "title": "Class TDEvent<TParam> | Tower Defense",
    "keywords": "Class TDEvent<TParam> An event that takes callbacks with one parameter Inheritance Object UnityEngine.Events.UnityEventBase UnityEngine.Events.UnityEvent <TParam> TDEvent<TParam> Namespace : Global Assembly : TowerDefense.dll Syntax public class TDEvent<TParam> : UnityEvent<TParam>, ISerializationCallbackReceiver Type Parameters Name Description TParam Type of the parameter"
  },
  "api/Global.TDEvent-2.html": {
    "href": "api/Global.TDEvent-2.html",
    "title": "Class TDEvent<TParam1, TParam2> | Tower Defense",
    "keywords": "Class TDEvent<TParam1, TParam2> An event that takes callbacks with two parameters Inheritance Object UnityEngine.Events.UnityEventBase UnityEngine.Events.UnityEvent <TParam1, TParam2> TDEvent<TParam1, TParam2> Namespace : Global Assembly : TowerDefense.dll Syntax public class TDEvent<TParam1, TParam2> : UnityEvent<TParam1, TParam2>, ISerializationCallbackReceiver Type Parameters Name Description TParam1 Type of the first parameter TParam2 Type of the second parameter"
  },
  "api/Global.TestCallback.html": {
    "href": "api/Global.TestCallback.html",
    "title": "Class TestCallback | Tower Defense",
    "keywords": "Class TestCallback A class to test the event system.false Place callbacks here. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour TestCallback Namespace : Global Assembly : TowerDefense.dll Syntax public class TestCallback : MonoBehaviour"
  },
  "api/Global.TestEventCall.html": {
    "href": "api/Global.TestEventCall.html",
    "title": "Class TestEventCall | Tower Defense",
    "keywords": "Class TestEventCall A class to test the event system. Fire events here. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour TestEventCall Namespace : Global Assembly : TowerDefense.dll Syntax public class TestEventCall : MonoBehaviour"
  },
  "api/Global.TowerMenuUISystem.html": {
    "href": "api/Global.TowerMenuUISystem.html",
    "title": "Class TowerMenuUISystem | Tower Defense",
    "keywords": "Class TowerMenuUISystem Brings up the tower menu when a tower is selected. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour TowerMenuUISystem Implements IUISystem Namespace : Global Assembly : TowerDefense.dll Syntax public class TowerMenuUISystem : MonoBehaviour, IUISystem Methods Create(GameObject) Declaration public bool Create(GameObject tower) Parameters Type Name Description UnityEngine.GameObject tower Returns Type Description Boolean Destroy() Declaration public void Destroy() Hide() Declaration public void Hide() OnMoveClick() Callback for the Move button Declaration public void OnMoveClick() OnUpgradeClick() Callback for the upgrade button. Declaration public void OnUpgradeClick() Implements IUISystem"
  },
  "api/Global.TowerPlacementSystem.html": {
    "href": "api/Global.TowerPlacementSystem.html",
    "title": "Class TowerPlacementSystem | Tower Defense",
    "keywords": "Class TowerPlacementSystem Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour TowerPlacementSystem Namespace : Global Assembly : TowerDefense.dll Syntax public class TowerPlacementSystem : MonoBehaviour Fields SelectorPrefab Declaration public GameObject SelectorPrefab Field Value Type Description UnityEngine.GameObject Methods TogglePlacer(GameObject, Vector3) Declaration public void TogglePlacer(GameObject targetTower, Vector3 location) Parameters Type Name Description UnityEngine.GameObject targetTower UnityEngine.Vector3 location"
  },
  "api/Global.TowerPlacer.html": {
    "href": "api/Global.TowerPlacer.html",
    "title": "Class TowerPlacer | Tower Defense",
    "keywords": "Class TowerPlacer Implements the tower placement location selector Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour TowerPlacer Namespace : Global Assembly : TowerDefense.dll Syntax public class TowerPlacer : MonoBehaviour Fields TowerObject A reference to the tower prefab that is to be placed Declaration public GameObject TowerObject Field Value Type Description UnityEngine.GameObject Methods PlaceTower() Declaration public bool PlaceTower() Returns Type Description Boolean SetTower(GameObject) Declaration public void SetTower(GameObject reference) Parameters Type Name Description UnityEngine.GameObject reference"
  },
  "api/Global.UIManager.html": {
    "href": "api/Global.UIManager.html",
    "title": "Class UIManager | Tower Defense",
    "keywords": "Class UIManager Manager class that holds references to all UI layers and handles the UI stack. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour UIManager Namespace : Global Assembly : TowerDefense.dll Syntax public class UIManager : MonoBehaviour Methods HideAll() Hide all UI layers in the stack. Declaration public void HideAll() ShowTowerMenu(GameObject) Creates the tower menu for a given tower Declaration public void ShowTowerMenu(GameObject tower) Parameters Type Name Description UnityEngine.GameObject tower GameObject for the selected tower ShowUpgradeMenu(GameObject) Creates the upgrade menu for a given tower Declaration public void ShowUpgradeMenu(GameObject tower) Parameters Type Name Description UnityEngine.GameObject tower GameObject for the selected tower"
  },
  "api/Global.UpgradeMenuUISystem.html": {
    "href": "api/Global.UpgradeMenuUISystem.html",
    "title": "Class UpgradeMenuUISystem | Tower Defense",
    "keywords": "Class UpgradeMenuUISystem Manager class for tower upgrades. Handles UI and tower object instantiation/deletion. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour UpgradeMenuUISystem Implements IUISystem Namespace : Global Assembly : TowerDefense.dll Syntax public class UpgradeMenuUISystem : MonoBehaviour, IUISystem Methods Create(GameObject) Declaration public bool Create(GameObject tower) Parameters Type Name Description UnityEngine.GameObject tower Returns Type Description Boolean Destroy() Declaration public void Destroy() Hide() Declaration public void Hide() OnClick(String) Callback for the Upgrade UI. String indicating the type of tower upgrade requested. Declaration public void OnClick(string type) Parameters Type Name Description String type Implements IUISystem"
  },
  "api/Global.UpgradeTree.html": {
    "href": "api/Global.UpgradeTree.html",
    "title": "Class UpgradeTree | Tower Defense",
    "keywords": "Class UpgradeTree This component stores information about possible upgrades in the upgrade tree. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour UpgradeTree Namespace : Global Assembly : TowerDefense.dll Syntax public class UpgradeTree : MonoBehaviour Fields gold Declaration public bool gold Field Value Type Description Boolean green Declaration public bool green Field Value Type Description Boolean red Declaration public bool red Field Value Type Description Boolean"
  },
  "api/Tests.EditModeSampleTest.html": {
    "href": "api/Tests.EditModeSampleTest.html",
    "title": "Class EditModeSampleTest | Tower Defense",
    "keywords": "Class EditModeSampleTest Sample editor tests Inheritance Object EditModeSampleTest Namespace : Tests Assembly : EditorTests.dll Syntax public class EditModeSampleTest Methods EditModeSampleTestSimplePasses() Declaration [Test] public void EditModeSampleTestSimplePasses() EditModeSampleTestWithEnumeratorPasses() Declaration [UnityTest] public IEnumerator EditModeSampleTestWithEnumeratorPasses() Returns Type Description IEnumerator"
  },
  "api/Tests.html": {
    "href": "api/Tests.html",
    "title": "Namespace Tests | Tower Defense",
    "keywords": "Namespace Tests Classes EditModeSampleTest Sample editor tests PlayerTests Tests for the player functionality TowerUIMenuTests Tests for the tower menu UI functions"
  },
  "api/Tests.PlayerTests.html": {
    "href": "api/Tests.PlayerTests.html",
    "title": "Class PlayerTests | Tower Defense",
    "keywords": "Class PlayerTests Tests for the player functionality Inheritance Object PlayerTests Namespace : Tests Assembly : RuntimeTests.dll Syntax public class PlayerTests Methods AIMovePlayer() Tests if the player can move Declaration [UnityTest] public IEnumerator AIMovePlayer() Returns Type Description IEnumerator Setup() Declaration [SetUp] public void Setup()"
  },
  "api/Tests.TowerUIMenuTests.html": {
    "href": "api/Tests.TowerUIMenuTests.html",
    "title": "Class TowerUIMenuTests | Tower Defense",
    "keywords": "Class TowerUIMenuTests Tests for the tower menu UI functions Inheritance Object TowerUIMenuTests Namespace : Tests Assembly : RuntimeTests.dll Syntax public class TowerUIMenuTests Methods CreateNewTower() Tests if a new tower can be created Declaration [UnityTest] public IEnumerator CreateNewTower() Returns Type Description IEnumerator Setup() Declaration [SetUp] public void Setup()"
  },
  "index.html": {
    "href": "index.html",
    "title": "Home Page | Tower Defense",
    "keywords": "Home Page Documentation auto-generated by DocFX. The manual is incomplete."
  },
  "manual/Events.html": {
    "href": "manual/Events.html",
    "title": "Tower Defense Event System | Tower Defense",
    "keywords": "Tower Defense Event System"
  },
  "manual/SerializableDictionary.html": {
    "href": "manual/SerializableDictionary.html",
    "title": "Usage Guide for the Serializable Dictionary | Tower Defense",
    "keywords": "Usage Guide for the Serializable Dictionary We've used azixMcAze's implementation: https://github.com/azixMcAze/Unity-SerializableDictionary Instructions Subclass SerializableDictionary . Generic classes won't be serialized. cs [System.Serializable] public class StringStringDictionary : SerializableDictionary<string, string> { } Subclass SerializableDictionaryPropertyDrawer in the Editor folder. Add the CustomPropertyDrawer attribute. cs [UnityEditor.CustomPropertyDrawer(typeof(StringStringDictionary))] public class StringStringPropertyDrawer : SerializableDictionaryPropertyDrawer { }"
  }
}